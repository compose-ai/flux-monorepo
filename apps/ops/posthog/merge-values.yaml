apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: posthog
  namespace: posthog
spec:
  # https://github.com/PostHog/charts-clickhouse/blob/main/charts/posthog/values.yaml
  values:
    # -- Cloud service being deployed on (example: `aws`, `azure`, `do`, `gcp`, `other`).
    cloud: "gcp"
    
    # -- Notification email for notifications to be sent to from the PostHog stack
    notificationEmail: "developer@compose.ai"
    
    # -- Site url specifies the canonical URL root the site can be accessed using.
    # This is used to e.g. generate shareable links to Dashboards.
    siteUrl: "posthog.ops.cluster.compose.ai"

    web:
      env:
        # -- Set google oauth 2 key. Requires posthog ee license.
        - name: SOCIAL_AUTH_GOOGLE_OAUTH2_KEY
          value:
        # -- Set google oauth 2 secret. Requires posthog ee license.
        - name: SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET
          value:
        # -- Set google oauth 2 whitelisted domains users can log in from.
        - name: SOCIAL_AUTH_GOOGLE_OAUTH2_WHITELISTED_DOMAINS
          value: "compose.ai"

    # TODO May need to use this instead of web oauth settings because says it requires a posthog ee license, though SAML may too according to their website
    saml:
      # -- Whether password-based login is disabled and users automatically redirected to SAML login. Requires SAML to be properly configured.
      enforced: false
      # -- Whether SAML should be completely disabled. If set at build time, this will also prevent SAML dependencies from being installed.
      disabled: false
      # -- Entity ID from your SAML IdP.
      # entity_id: "id-from-idp-5f9d4e-47ca-5080"
      entity_id:
      # -- Assertion Consumer Service URL from your SAML IdP.
      # acs_url: "https://mysamlidp.com/saml2"
      acs_url:
      # -- Public X509 certificate from your SAML IdP to validate SAML assertions
      # x509_cert: |
      # MIID3DCCAsSgAwIBAgIUdriHo8qmAU1I0gxsI7cFZHmna38wDQYJKoZIhvcNAQEF
      # BQAwRTEQMA4GA1UECgwHUG9zdEhvZzEVMBMGA1UECwwMT25lTG9naW4gSWRQMRow
      # GAYDVQQDDBFPbmVMb2dpbiBBY2NvdW50IDAeFw0yMTA4MTYyMTUyMzNaFw0yNjA4
      # MTYyMTUyMzNaMEUxEDAOBgNVBAoMB1Bvc3RIb2cxFTATBgNVBAsMDE9uZUxvZ2lu
      # IElkUDEaMBgGA1UEAwwRT25lTG9naW4gQWNjb3VudCAwggEiMA0GCSqGSIb3DQEB
      # AQUAA4IBDwAwggEKAoIBAQDEfUWFIU38ztF2EgijVsIbnlB8OIwkjZU8c34B9VwZ
      # BQQUSxbrkuT9AX/5O27G04TBCHFZsXRId+ABSjVo8daCPu0d38Quo9KS3V3627Nw
      # YcTYsje95lB02E/PgfiEQ6ZGCOV0P4xY9C99d26PoYTcoMT1S73jDDMOFtoD5WXG
      # ZsKqwBks1jbLkv6RYoFBlZX00aGzOXDzUXI59/0c15KR4EzgTad0t6CU7X0HZ2Qf
      # xGUiRb7hDLvgSby0SzpQpYUyYDnN9aSNYzpu1hiyIqrhQ7kZNy7LyGBz0UIuIImF
      # pF6A3bzzrR4wdacFY9U0vmqFXXcepxuT5p2UyAxwbLeDAgMBAAGjgcMwgcAwDAYD
      # VR0TAQH/BAIwADAdBgNVHQ4EFgQURLVVKanZPoXGEfYr1HmlaCEoD54wgYAGA1Ud
      # IwR5MHeAFES1VSmp2T6FxhH2K9R5pWghKA+eoUmkRzBFMRAwDgYDVQQKDAdQb3N0
      # SG9nMRUwEwYDVQQLDAxPbmVMb2dpbiBJZFAxGjAYBgNVBAMMEU9uZUxvZ2luIEFj
      # Y291bnQgghR2uIejyqYBTUjSDGwjtwVkeadrfzAOBgNVHQ8BAf8EBAMCB4AwDQYJ
      # KoZIhvcNAQEFBQADggEBALP5lhlcV8avbnVnqO7PBtlS2mVOJ2B7obm50OaJCbRh
      # t0I/dcNssWhT31/zmtNfKtrFicNImlKhdirApxpIp1WLEFY01a40GLmO6FG/WVvB
      # EzwXonWP+cP8jYQnqZ15JkuHjP3DYJuOak2GqAJAfaGO67q6IkRZzRq6UwEUgNJD
      # TlcsJAFaJDrcw07TY3mRFragdzGC7Xt/CM6r/0seY3+VBwMUMiJlvawcyQxap7om
      # EdgmQkJA8Dk6f+geI+U7jV3orkPiofBJi9K6cp5Fd9usut8jwi3GYg2wExNGbhF4
      # wlMD1LOhymQGBnTXPk+000nkBnYdqEnqXzVpDiCG1Pc=
      x509_cert:
      # -- Name of attribute that contains the permanent ID of the user in SAML assertions.
      # attr_permanent_id: "nameID"
      attr_permanent_id:
      # -- Name of attribute that contains the first name of the user in SAML assertions.
      # attr_first_name: "firstName"
      attr_first_name:
      # -- Name of attribute that contains the last name of the user in SAML assertions.
      # attr_last_name: "lastName"
      attr_last_name:
      # -- Name of attribute that contains the email of the user in SAML assertions.
      # attr_email: "email"
      attr_email:

    ## External Object Storage configuration
    ##
    # TODO
    externalObjectStorage:
      # -- Endpoint of the external object storage. e.g. https://s3.us-east-1.amazonaws.com
      endpoint:
      # -- Host of the external object storage. Deprecated: use endpoint instead
      host:
      # -- Port of the external object storage. Deprecated: use endpoint instead
      port:
      # -- Bucket name to use.
      bucket:
      # -- Region of the bucket (for AWS).
      region:
      # -- Name of an existing Kubernetes secret object containing the `access_key_id` and `secret_access_key`. The secret has to contain the keys `root-user` and `root-password`).
      existingSecret:
    
# TODO Add all prometheus alerts and scraping for prometheus + loki
