---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRZTExc0gvdTZ1UWlHSmN4REZRek05ekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNekEzTWpjeU1ETTJNakphRncweU5EQTNNall5TURNMk1qSmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBczg3c0dGcVJ3SXdMZmxjNmpEbkc2VHhiaWRWYUJLNlVUYzhPMEZWenkzMEdMSlNXWG9STApoOEh6bk5saEtFOEhCNXFPaVkrR09lS1ZhRlg0Z1lYL3hzcDVkNTVDZHVHeHNUTFp0Z2lFR1gwcUxOdHlxWDlxCmdJOGEvRGMzSi9CMjg0RVYrNlBBOGxZZW02aFFyczNRaVhHWFdiSnhxK3RFVTVwOXRhVDNDMitKVUdKdkZOaU0KQVJNNytaZlB2MHdEM05tWEhQWEE2UkZ5dXVJNUFDNEI1UXZOUzl1VjdmWVpTQkR5cGxCK1VlbVZwTnJTa0FLNAp2eUVZNlc3TFNrNHRIZDJJU1p4cHcxV3dwblVHOHJlbEJNR0NpajhkcjJzbnNsMHFwM0t4WFNWbWNPc1NpMGpGCk9RbWlocG53T1RPOTV4MDRMRTk0c1BUNXBKSXFsKzJrRlFJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUdaOEQ4bHVzdVlvWEVlUmZ4MVg0SUtOVURyNnFHQU1CQUN1ZGplc1Q4NTUKSDlvTWt5QnVqaG1RcW0xZmVDQmtGRWl3Z2RMaUhjcmFRY3hkeU0waXZWaUJ2QTE3MndFamowWnBIWjRod1Z3egp4OEdxYUNRNlFEcEtPVXFhT2RVb3F5Zm5obVdYWFRlbWQ2V1N6VTNCR0gvb2xrQUY5SFEyOUFmdFhjOGlEdEViCjRld1FlZjVBREJ4bGlSK1R0K3hmcThxRndwQjBXQ2pCd1RlcnNNV1U4ZmVzTHQrWFpZbk45RmVNVHRsK3VPcHkKOW5YM0krUU1rKzcyTHFhVzJmL3FCd2dSQlhZM3g0Mk56L3diUXpjVkZHYjNLRkZ4VnlKcXJ3V3l0ekgzNFFZYQowTlk0Q2padmZBQnFYQS9ka0xLYzIwSGxTaHBEWlEza1VOOTdHWGQ5NVAwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBczg3c0dGcVJ3SXdMZmxjNmpEbkc2VHhiaWRWYUJLNlVUYzhPMEZWenkzMEdMSlNXClhvUkxoOEh6bk5saEtFOEhCNXFPaVkrR09lS1ZhRlg0Z1lYL3hzcDVkNTVDZHVHeHNUTFp0Z2lFR1gwcUxOdHkKcVg5cWdJOGEvRGMzSi9CMjg0RVYrNlBBOGxZZW02aFFyczNRaVhHWFdiSnhxK3RFVTVwOXRhVDNDMitKVUdKdgpGTmlNQVJNNytaZlB2MHdEM05tWEhQWEE2UkZ5dXVJNUFDNEI1UXZOUzl1VjdmWVpTQkR5cGxCK1VlbVZwTnJTCmtBSzR2eUVZNlc3TFNrNHRIZDJJU1p4cHcxV3dwblVHOHJlbEJNR0NpajhkcjJzbnNsMHFwM0t4WFNWbWNPc1MKaTBqRk9RbWlocG53T1RPOTV4MDRMRTk0c1BUNXBKSXFsKzJrRlFJREFRQUJBb0lCQUZzNXBtc011Rm42TTNLYwpDdVpPQWU4Zllrbmg1dFB0UnV6YkdtYjBrOVV2ejB3YTd0ZHhRMmpUTENmdDJlODdlUk9RaExTaURyV2JrYlhuCnVEYnVwMEJTUmFJOHR2ZmR0ZXR6SXlYSjJFdWVSeUdQRFBPVjQ1RHFDZ1RnZHFsYXhON3lKUmNRazduZm01UFoKcDJXb29oNjVkTkpiU0hTeTNtMlVPaWRJVk5hRm5FRUVWMGw5RmVMUFhEM0ZidFJ1OGJxNGVCNjNJdnpxR0hGRQo3bXNIME0reXREMDd4bzBnVWR6T3c5UkVNdUZIbkQ3NkNRNFM3UTgzUTNCbTdVY05NRGxVN3VsNUowazN6TzZPCjFDV2xOdGFWdm1IcTRpRmMrVzl2dmI0UHA1eGJNVW1BaW9QeGI2S3Ywandsdkd6SklGcGUzLzZmenZjS05UMEkKbk54bnpZRUNnWUVBemdUelFpbFhIeGxONXF5aXlVRlgveUxid29lWm1DUjhaWm5qeHZPYWErQlVUZ3Nzay93SAp3TXBacGNuT3VZcWZ5TnE0Smc1c1dybU5wbXpRV21qN1pXd3E1UkI2Y3MvOCtPckFhbStOZTFZRHduZ2FIVXlpCmpNUmdFeFF6SjdHOTNFZTdSSEV1UEE5eFUxNExRK09YRWhJRGlFRmZDNUt2NHRsR0t2Qm9NekVDZ1lFQTMyNGIKYTdOdjBIa0x5ZU9xS3l3WXRqcENiSnFLSkRXbElkd3l3YkRBNDcwR2JpVTZYWnI0RWVWTC82VTE4QWx2dXVoTQpodGMwQWlOSzVsencvcWQvbUdMTmFlZ214MDRGR2t2V1dCUHFYUFlNRXpIUE8wU1FNY0UzVmVUNC8vSUFHR2duCkN3K1dQRE1wWHhDNGZiZ2Fyd29INmh6TkR4Nkp1NytvSVBBbW5pVUNnWUJWYmVnUmYyTUpHazBiWW1yK1dZSkwKNGdDTzRmdm5Bdm95aDJYVWtoOXVyRTlKTFlrR3RIUGlsZ1ltb1ZCL3orUUNQZkF1bDd5R3ducmlrQ3kxME9LdQpZL1JGbUZldVZHRHFOeTRpOUs4T2ZkU0JSNXhNbWdLdHJLREtTSTROMzc2REladWQvZkRXSnZFdlNNZ1RGc1VHClVVSDF0bVhiUHJDQXVPaEgxZmpmZ1FLQmdGQWZuam03T1dmYllMemZwZENobWFNUHRXNVk1UjBqRjdyU3ltam4KUitUampvREZYTzdnZWdHQTV3WWdhdjFQaFAvVCtrMklzeC9wSkIwRVMzQW5CUHpTd2JNdkMya0JzNWJBaDNkQwpmUk1sTVNOWkEyWFBxcDROR2hqMWFjM3ZMTldUMUJ5RlZHejJNK25oaHllZWRBTTlaNlV1K3VKbkl5RnZFNDNzClVRejVBb0dCQUtEU0x0RkJDbDIvRzR1N0FLVUE5dTZEaFNiTE11UUdTU3JSYVZFYzBtYk1oSVJUNVYwNmdnNXUKV3ZuUURndm5STXdMUW1VbmpyRlk0RjR4WlNXSG9UNU1pUzB6emJWRUtqRHdQbEVEYW15WjNQblVwQjFTMjJxawo2ZHl0M3FiN25yMlVsVURwUDBuNkxFcnNjbVRYWEswWmsvdE1kV0tsME5DYlZnSFBMeVBzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRZTExc0gvdTZ1UWlHSmN4REZRek05ekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNekEzTWpjeU1ETTJNakphRncweU5EQTNNall5TURNMk1qSmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBczg3c0dGcVJ3SXdMZmxjNmpEbkc2VHhiaWRWYUJLNlVUYzhPMEZWenkzMEdMSlNXWG9STApoOEh6bk5saEtFOEhCNXFPaVkrR09lS1ZhRlg0Z1lYL3hzcDVkNTVDZHVHeHNUTFp0Z2lFR1gwcUxOdHlxWDlxCmdJOGEvRGMzSi9CMjg0RVYrNlBBOGxZZW02aFFyczNRaVhHWFdiSnhxK3RFVTVwOXRhVDNDMitKVUdKdkZOaU0KQVJNNytaZlB2MHdEM05tWEhQWEE2UkZ5dXVJNUFDNEI1UXZOUzl1VjdmWVpTQkR5cGxCK1VlbVZwTnJTa0FLNAp2eUVZNlc3TFNrNHRIZDJJU1p4cHcxV3dwblVHOHJlbEJNR0NpajhkcjJzbnNsMHFwM0t4WFNWbWNPc1NpMGpGCk9RbWlocG53T1RPOTV4MDRMRTk0c1BUNXBKSXFsKzJrRlFJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUdaOEQ4bHVzdVlvWEVlUmZ4MVg0SUtOVURyNnFHQU1CQUN1ZGplc1Q4NTUKSDlvTWt5QnVqaG1RcW0xZmVDQmtGRWl3Z2RMaUhjcmFRY3hkeU0waXZWaUJ2QTE3MndFamowWnBIWjRod1Z3egp4OEdxYUNRNlFEcEtPVXFhT2RVb3F5Zm5obVdYWFRlbWQ2V1N6VTNCR0gvb2xrQUY5SFEyOUFmdFhjOGlEdEViCjRld1FlZjVBREJ4bGlSK1R0K3hmcThxRndwQjBXQ2pCd1RlcnNNV1U4ZmVzTHQrWFpZbk45RmVNVHRsK3VPcHkKOW5YM0krUU1rKzcyTHFhVzJmL3FCd2dSQlhZM3g0Mk56L3diUXpjVkZHYjNLRkZ4VnlKcXJ3V3l0ekgzNFFZYQowTlk0Q2padmZBQnFYQS9ka0xLYzIwSGxTaHBEWlEza1VOOTdHWGQ5NVAwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRTjl2enFCNnBwQjdEbXFQbDZ4bXN2REFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNd056STNNakF6TmpJeldoY05NalF3TnpJMk1qQXpOakl6V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURhR0xlK0xxZlhyRXVud0RQUUhTMDBoV2NBUlBSa1podEM4RHlmZjNNcwpRMDFDeWtrbERUZHlZWXIwYUI4U0h0OTgwbUdMdkU0Z1k1NHdBYjNCWFN1QVNjUEVkSmRjWmNjbjU5TDdaaG1mCnZzOFp2ellXYWtFWGZtdVA4cUUzN1ZOZ3RrbVZGWEJydkdZL2FQRlNnMjRiT05TNC90ZG82RTF2dHhGRG9VM3YKVDZTdUZDQi9MSWlzdE1Fc3JKbGFMWk9BOVh6Ymk5MllybDR5UE1WTVkwSytTZHltWFNsNVd0cFFZdGlzVys0ZwpsKzBBOXFXb1JyMnVpc3FBaks0S1VYeDVEdzlkc2tiSWVxZTFBMkhIYzJnWVVLUmdVdmg1ejNoVzBYb2xTbkprCk5WakIvWkFZZTdXNlVxSTZ6MVBSVzFIcFE2aGRCbXI4SUNLblhEaXhLMWxyQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKVVlhRnVlcHhOUG1KalRNL2NMN0RJUTFFWkEKZ1hXM3dvQUF4L0pNNUtkWFFXTVZyYWRadnNQcHk4cDNNd21QWkRJcDVjYWJXeDVhelNWRmt1NkUyaW03R1NndgpBRmkwYzdUMDRTYTQ4eHpYR0VjbXRWaW8wc2FOTmErcUQ3cVMweW8xNzY2TFc4aWVpN0xxU3hZUngvNlRUTUwyCkF3Q1JJaVdDVm1hK3V5Z3E3Z0d4Z1VHV3F3S0VZNXZoNTRzb3Fua3hjdGtxc1RKVXhOaGFaT2xOcEw3UVREQzYKVWh6SXVoK1A5VStvRy9aeGdDS3VkVVBHWlZvbHZmS0ZRRzZVbDNkY3RybGFXVDFTQVBCOG93dERXUVhqVFNCNgovMkw5Y2taQVdJaitseWE1NVorTk5SekRvZWRjS2h6NEY5dXlqeUpiV2hGcTJXWTVHWUpUSlhuRnRCQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMmhpM3ZpNm4xNnhMcDhBejBCMHROSVZuQUVUMFpHWWJRdkE4bjM5ekxFTk5Rc3BKCkpRMDNjbUdLOUdnZkVoN2ZmTkpoaTd4T0lHT2VNQUc5d1YwcmdFbkR4SFNYWEdYSEorZlMrMllabjc3UEdiODIKRm1wQkYzNXJqL0toTisxVFlMWkpsUlZ3YTd4bVAyanhVb051R3pqVXVQN1hhT2hOYjdjUlE2Rk43MCtrcmhRZwpmeXlJckxUQkxLeVpXaTJUZ1BWODI0dmRtSzVlTWp6RlRHTkN2a25jcGwwcGVWcmFVR0xZckZ2dUlKZnRBUGFsCnFFYTlyb3JLZ0l5dUNsRjhlUThQWGJKR3lIcW50UU5oeDNOb0dGQ2tZRkw0ZWM5NFZ0RjZKVXB5WkRWWXdmMlEKR0h1MXVsS2lPczlUMFZ0UjZVT29YUVpxL0NBaXAxdzRzU3RaYXdJREFRQUJBb0lCQUhmRC9ScjJHZnVJeFI4QQpvRE5YNGx3bUtkTHZDdG9iYkRzTkcrMW1tc09pemNtd3Rnd2Z2dVFVQnErQ2doVjhXTFA5LzgweGdpR3RNdEFnCkZLa2IxZWlrR1ZwSHdGcmdGVWFudXFlTmdPTEZjSXN1QXJDNmRyWkZHU0k2VmlnVkxxVThWUm9HWk83MHpaMWkKcnFybU84KzlIS3ZlWGtKZzF5MVM5YXNTNkc1U1paQStSZU04YU4vOHE3eEhJYVlqeG1IM1JLUWVVOXl2WFB2VwpOS1J1elZmQ01id1RKdDNsWDJnalRGMnd2ZTkxN3lYK3luYU8yN1VyWEc5VkpkN01WZVcyaVJONXZkVE4yRFNBCm4xbkhCYXZUcFpncElMNUgvVkh6WG00MmVKLzVpSlQxeFhoL21QeUNoQTZnS3lGM1JNUzhaZi9GekwveXk0TFkKV1RoNHZ1a0NnWUVBN3FmaVJmOHZseXhWWmJUbHJOR0U2czBteHI3a1dyN21qaTBlS3pwcG1sMi9QQ0I3TVp5aApXUW8yd2pxSENmY3JiYVA4aU5RcGdYYlVSaUZ6bmxqMndudjZRSGVOZjBuU3M4OEZObDNqZlRCbjhxYi9rbjhiCjJWcU5ST0J0U1R3ZXJsYlZTZ0liNlI1d1NaVTRyRXVhU3pmbHB2MzNDZVdGWENXSFo1Y2VRNjBDZ1lFQTZmSlYKNnJ4bis3aHRxOU8zbWpzdlhkMkhoRzRVa0taL3pxR3BCZC9tMHNhQnNrVEtNaThHRElOVmx4RXdrN2t0VjJpTApLNm9XTFUwR0hFVk8zekhlWDg1WUMySVlEU3BkcnMvTTlmN3dRYmwvNThzYWxkSUNLV0hFb3I3VU9IUS8xVnVrCkJ4TjFFSVRJcEZhWjJaaHg0NkdsU2hwN2VlTVNkQUtFeklzZDlIY0NnWUVBa0FUMkVxR2RtWS9pZFA4R2Z4VHQKTGpqaFJweVo5MzB1YXV3bFFaYjlkVzlQWVR5RXUzcTNENkdQVEFTL3l5N0NvV2FObGhEYWYwc3piS0x4UDhTVwpIT1Z1TG9zMjgzS2NXVy83eUVRK2JTVFNCZWZyWVArZDBidklkcUVzc2o0NmthRExFOTlUOG9rdzMrYlNEWCtPClBBZ2VhWGpuSkt6Q25zbnkvWHQvZ3YwQ2dZQVpva2tSd0hVd1dzUUJtT0E4VVJIZW1pQjRQVXVaa2ZUZElrK1AKNmptempMYTNYdHc4NVhRbk9OalBCYjRwNFpkN1JXUkNjNCtjaFIwUFNmVGJkZTVrMXdwRXJRbnZuMTNHZ3RSMQplK3E5ZU9MdjlneENzRkUyVVpVbk0vdXk5K0hxc2ZEbUtaYWhLYnVHYmtyTFVlM2d3RnlKSXgrMmVsQVNVQmhYCkJVTlIvd0tCZ0IrV05HU0tLTW9HL3oxOTdpNElkUFpFbG85LzhqenlsRzdvamlJMU92aitydGhXdHpzYzBBRDgKZzV3WjNRL2luYjZXK0FPTUVLQzVDamFuYTd6ejlyci9kSlgvZzNCL0VIQmJHeHdVVEc2YmZualpqMDh5MWJRRwpUa1ZFd2VhcTRhd2F5dlNSQ3JEcVFFOVJSbGdtTDMxR0dWQUdzRTFmaVd6U0FDL3lCRWwwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRTjl2enFCNnBwQjdEbXFQbDZ4bXN2REFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNd056STNNakF6TmpJeldoY05NalF3TnpJMk1qQXpOakl6V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURhR0xlK0xxZlhyRXVud0RQUUhTMDBoV2NBUlBSa1podEM4RHlmZjNNcwpRMDFDeWtrbERUZHlZWXIwYUI4U0h0OTgwbUdMdkU0Z1k1NHdBYjNCWFN1QVNjUEVkSmRjWmNjbjU5TDdaaG1mCnZzOFp2ellXYWtFWGZtdVA4cUUzN1ZOZ3RrbVZGWEJydkdZL2FQRlNnMjRiT05TNC90ZG82RTF2dHhGRG9VM3YKVDZTdUZDQi9MSWlzdE1Fc3JKbGFMWk9BOVh6Ymk5MllybDR5UE1WTVkwSytTZHltWFNsNVd0cFFZdGlzVys0ZwpsKzBBOXFXb1JyMnVpc3FBaks0S1VYeDVEdzlkc2tiSWVxZTFBMkhIYzJnWVVLUmdVdmg1ejNoVzBYb2xTbkprCk5WakIvWkFZZTdXNlVxSTZ6MVBSVzFIcFE2aGRCbXI4SUNLblhEaXhLMWxyQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKVVlhRnVlcHhOUG1KalRNL2NMN0RJUTFFWkEKZ1hXM3dvQUF4L0pNNUtkWFFXTVZyYWRadnNQcHk4cDNNd21QWkRJcDVjYWJXeDVhelNWRmt1NkUyaW03R1NndgpBRmkwYzdUMDRTYTQ4eHpYR0VjbXRWaW8wc2FOTmErcUQ3cVMweW8xNzY2TFc4aWVpN0xxU3hZUngvNlRUTUwyCkF3Q1JJaVdDVm1hK3V5Z3E3Z0d4Z1VHV3F3S0VZNXZoNTRzb3Fua3hjdGtxc1RKVXhOaGFaT2xOcEw3UVREQzYKVWh6SXVoK1A5VStvRy9aeGdDS3VkVVBHWlZvbHZmS0ZRRzZVbDNkY3RybGFXVDFTQVBCOG93dERXUVhqVFNCNgovMkw5Y2taQVdJaitseWE1NVorTk5SekRvZWRjS2h6NEY5dXlqeUpiV2hGcTJXWTVHWUpUSlhuRnRCQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUx5UERKMDMzaWZzWVAvdzFyS3VteHd3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TXpBM01qY3lNRE0yTWpKYUZ3MHlOREEzTWpZeU1ETTJNakphTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQ3piVlNicTd0NDR0MGRzUk9CUy9pMWNpb1ZtZ05VelBKRmtHMUV0cmR0MlhHcgp6bkNsUFVrT0JTTVBUQi9aMmpTSFh2b2haeXZUaCs4YmRLZElOYTR5S2dydjJ5Qi9MZmVsampwcnNSR3A4YTd1ClNsVEJkS09ZWlIyeTREZ0QyQXFBRnZTZzBYL1ZEVGhGU21Gd0lQRWxUSG5hZjRVM3FpQTE4Qi9mcjh0RG5TdmoKdnlZblZnbUg3cXg1L0VIK1hmRnR4YThZMzgwV05DUURRSDR5RFMrekFsQkZackxPRDNpdGJUTUhqRzFQVGV0ZAowendDQmJ1alYrUzArc2ZWTTRzRzlxUll5TitGaVhuTXhDdk4xbDJBM2tyYkNzWTdtT3E2MmFsZklObXd4K2hUCk45N1p1cTZWc1dKOE8wMEpmZU9PMXhQVTZYU3lhNFhCUXFsNnFJaS9BZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNvckladjlOYllmUENWemJwUjBtT0hTeUZBalVXdXBXV1cKWW1TOXhmWklmTEVpNWYyRXVrcUNuMURGVHc3UnRDR1lXY2pra1ZtTHRBM3NNeXUwOWVUVDR3bUxiV1ZuVkNLYwpLWkd0WmltbDNDVThJZ2xjNDRHQVJIZnh2b09kZWVxdzNNNEV0eEF4bjcxMW1UeHBOU29Jcnc4b1JwU2xqc0ExClVwWEdwRittUGxUVS84VXYyajQ4YXM1MzlCR2N0RWRSY3NRNnlmWlFUbyszYkFjbmVMODlGSGg5SGZmaTR3N20KdXBvblJZME9ZQTd0SzB4L2F2d25sejRzZUZKaHhpVitpR2NaYjNzeDk4REdjOVY2TFN6ZVVWRGZKVURCREV4UQpSbzNuSFYxTStMMzhVR2xzUVJQTGs3SGFPSzIxVnBwQ0s1a2x4WHRTRithd25rcnVuZ1VtCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBczIxVW02dTdlT0xkSGJFVGdVdjR0WElxRlpvRFZNenlSWkJ0UkxhM2JkbHhxODV3CnBUMUpEZ1VqRDB3ZjJkbzBoMTc2SVdjcjA0ZnZHM1NuU0RXdU1pb0s3OXNnZnkzM3BZNDZhN0VScWZHdTdrcFUKd1hTam1HVWRzdUE0QTlnS2dCYjBvTkYvMVEwNFJVcGhjQ0R4SlV4NTJuK0ZONm9nTmZBZjM2L0xRNTByNDc4bQpKMVlKaCs2c2VmeEIvbDN4YmNXdkdOL05GalFrQTBCK01nMHZzd0pRUldheXpnOTRyVzB6QjR4dFQwM3JYZE04CkFnVzdvMWZrdFBySDFUT0xCdmFrV01qZmhZbDV6TVFyemRaZGdONUsyd3JHTzVqcXV0bXBYeURac01mb1V6ZmUKMmJxdWxiRmlmRHROQ1gzamp0Y1QxT2wwc211RndVS3BlcWlJdndJREFRQUJBb0lCQVFDUkFUWnphR0psMjlJZgpBTkJtbWVNeG9FWHFsMEZCOHkrSWtLUDkrRHhkaG5HYkM0ZDF3d1diVXdOMmhXcm9RTFJiQXFMYkErb2pWYVFqCmFDOFk2R2tUR1c4bFVNMytla085aENncWlEdGlRSFBER0VkTzROaWxmSEozOFVUVHRuRWwrMmRQNEgrU3l0QkQKRDAyWHRNZXVBUlFwUlEyQVl2a05IalprTEVuMUpXQjV3cVkxdklVdnBOb0ZUU1dlWDJ5WnFlK2pZYSt0K2xIMgpSbUp2bThRbndUN2xFOUJJMDZaMy9mK3IwTXhZaVc3QjcrVldFYnhCS1c5bGQvYzFlQkpKcVdWanpNLzNNeTUxCmRBdUd1SVlmekYyY3BPS0l1UHZRZk5wd3pXbDJJcDJMM3k3V216Y2xGbm9TUFJiYmRuaThYK1VFNmNDREEzaEUKTEpBNUs2ZUJBb0dCQU9scnlsUi9aVEJFVmpIQ0FnTzNoM3dFZ2NpKzRuQnRYcmdsUVYxWURYVFp0RURxUUhRUgpQZ0VVRDlCY0VsY2dmenJYdFJxM3JKVnJQZm1JVzZxQVVVU1R4T0xHYkI2a2NhTDc0YWhyQmdRanorQjNEK0xQCkNubGZTOXZwODB4NVBrRTRiUGVWYnBYOHJZKy8zc1RsVDF2eXBXSk40UWNEM2VyNUxuVWNERFhQQW9HQkFNVEkKZkhjMTBhc1lDNzF0ODd1ajFDUyt0WEVCL3Fsdm5YTTJENDhHbDNHc0lscERmYStIUTRCNW5jVFdxcUlkZE05SgpnekVZbGxsaHh1VnYrK0FUSytaYUtKTytvRk9Wc2ZFSGxtMzlSYVRJajEybEJzaGVRRzJQb3R6REhSRjJnZitCCnFpaHp0cDRKNnNCT29GbUxRM3lZYThRR3JtSTJrUzlUVmo5STZ5b1JBb0dBRU5qQXY1eDZOeU9YZlB2ZG5Wc1AKb2puSkRDNEt0Y2FQQVlkZTBsZmFrTVp0cGduQ0lSNWxkVHAzY2JoVGNvcGI1R2xSSHQ2R3pEbnpQU0ZFVEdmNgpkWktjc1NsVkFGa3FBbk5mZEFKVmF0TVMyOFo4RlFpUVh2WXJ5WEYzSjl2UVRIREFISlppWnR6WHdmbzlIOFRWCkYzUEp6L0NDL3ppZU9hbEdXeGx0SUMwQ2dZQWxFNUUvOU1mNGNLTmxvWjNXc050N3dPTDIwK1ZqajBBZlFRUlYKY214K1lteG1qV2pVOWF0bVBZUFlYb252MlpUMHFXa3Fpdk5wQzk4cHc1dTFjR2RKRTV1cG1yVWlpb1hvWUFHYgozNmlMajY1VGVwQjRtQ21UZXdpNGg1cW1lNm1xdG9lVTc1aHMxbm1BbWsva0R6VTcrSXYxZHp6TURIUDJjc0ZCClV6L2J3UUtCZ0Nib1RoanVXelp0b1VZNU92Z0N3K3JXbjVxVlFvNVU1SHhoT0lETHk5dDF1WnJzeXQ5bjlDWE8KaXU2WDhZYUxPVzFxS2tpYVQrTXBVNlhWQk1JcnFjdVJUbmRFa1lVaEp2eTBQTWxHSjI2czVPUEpBcndneXg5MQpjcDZsODJiVmY5a1pnUThVR3FxQTRrRDJDbEZwdXdtdXg4RUc3TGJrTWttL3hOWlBSMStXCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUx5UERKMDMzaWZzWVAvdzFyS3VteHd3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TXpBM01qY3lNRE0yTWpKYUZ3MHlOREEzTWpZeU1ETTJNakphTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQ3piVlNicTd0NDR0MGRzUk9CUy9pMWNpb1ZtZ05VelBKRmtHMUV0cmR0MlhHcgp6bkNsUFVrT0JTTVBUQi9aMmpTSFh2b2haeXZUaCs4YmRLZElOYTR5S2dydjJ5Qi9MZmVsampwcnNSR3A4YTd1ClNsVEJkS09ZWlIyeTREZ0QyQXFBRnZTZzBYL1ZEVGhGU21Gd0lQRWxUSG5hZjRVM3FpQTE4Qi9mcjh0RG5TdmoKdnlZblZnbUg3cXg1L0VIK1hmRnR4YThZMzgwV05DUURRSDR5RFMrekFsQkZackxPRDNpdGJUTUhqRzFQVGV0ZAowendDQmJ1alYrUzArc2ZWTTRzRzlxUll5TitGaVhuTXhDdk4xbDJBM2tyYkNzWTdtT3E2MmFsZklObXd4K2hUCk45N1p1cTZWc1dKOE8wMEpmZU9PMXhQVTZYU3lhNFhCUXFsNnFJaS9BZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNvckladjlOYllmUENWemJwUjBtT0hTeUZBalVXdXBXV1cKWW1TOXhmWklmTEVpNWYyRXVrcUNuMURGVHc3UnRDR1lXY2pra1ZtTHRBM3NNeXUwOWVUVDR3bUxiV1ZuVkNLYwpLWkd0WmltbDNDVThJZ2xjNDRHQVJIZnh2b09kZWVxdzNNNEV0eEF4bjcxMW1UeHBOU29Jcnc4b1JwU2xqc0ExClVwWEdwRittUGxUVS84VXYyajQ4YXM1MzlCR2N0RWRSY3NRNnlmWlFUbyszYkFjbmVMODlGSGg5SGZmaTR3N20KdXBvblJZME9ZQTd0SzB4L2F2d25sejRzZUZKaHhpVitpR2NaYjNzeDk4REdjOVY2TFN6ZVVWRGZKVURCREV4UQpSbzNuSFYxTStMMzhVR2xzUVJQTGs3SGFPSzIxVnBwQ0s1a2x4WHRTRithd25rcnVuZ1VtCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.13.5
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.13.5
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMzA3MjcyMDM2MTJaFw0yNDA3MjYyMDM2MzJaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEqp/0h2aPyNUCdSWJRDESVv9+SamuHIhFr1r/aktem964i1rtfDSMy5H7Xtv6
            F1ZOG5r/j+dt5YBi4azxoXLxfKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBTQ6nT+djTeU+P+BO1XEeVnGpAqyzAKBggqhkjOPQQDAgNIADBFAiEAgZo3Yt65
            LqTDrGGFRjvbbUYDeWTijGIqnE9lbK/7xskCIB710GTd9xrhllTKfOFzQ13kBOOr
            hXgRl8IdgszIyHqf
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMzA3MjcyMDM2MTJaFw0yNDA3MjYyMDM2MzJaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEqp/0h2aPyNUCdSWJRDESVv9+SamuHIhFr1r/aktem964i1rtfDSMy5H7Xtv6
      F1ZOG5r/j+dt5YBi4azxoXLxfKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTQ6nT+djTeU+P+BO1XEeVnGpAqyzAKBggqhkjOPQQDAgNIADBFAiEAgZo3Yt65
      LqTDrGGFRjvbbUYDeWTijGIqnE9lbK/7xskCIB710GTd9xrhllTKfOFzQ13kBOOr
      hXgRl8IdgszIyHqf
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.13.5
    networkValidator:
      connectAddr: 1.1.1.1:20001
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.1
      iptablesMode: legacy
      kubeAPIServerPorts: 443,443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEzTWpjeU1ETTJNVEphRncweU5EQTNNall5TURNMk16SmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVxcC8waDJhUHlOVUNkU1dKUkRFU1Z2OStTYW11SEloRnIxci9ha3RlbTk2NGkxcnRmRFNNeTVIN1h0djYKRjFaT0c1ci9qK2R0NVlCaTRhenhvWEx4ZktOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVFE2blQrZGpUZVUrUCtCTzFYRWVWbkdwQXF5ekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBZ1pvM1l0NjUKTHFURHJHR0ZSanZiYlVZRGVXVGlqR0lxbkU5bGJLLzd4c2tDSUI3MTBHVGQ5eHJobGxUS2ZPRnpRMTNrQk9PcgpoWGdSbDhJZGdzekl5SHFmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFRMFViZks2R3NxQXh1ZzZUSVgwelEwckxnVWhDSEcxRjhjQVVvdXI0aG1vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFcXAvMGgyYVB5TlVDZFNXSlJERVNWdjkrU2FtdUhJaEZyMXIvYWt0ZW05NjRpMXJ0ZkRTTQp5NUg3WHR2NkYxWk9HNXIvaitkdDVZQmk0YXp4b1hMeGZBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMzA3MjcyMDM2MTJaFw0yNDA3MjYyMDM2MzJaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEqp/0h2aPyNUCdSWJRDESVv9+SamuHIhFr1r/aktem964i1rtfDSMy5H7Xtv6
    F1ZOG5r/j+dt5YBi4azxoXLxfKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBTQ6nT+djTeU+P+BO1XEeVnGpAqyzAKBggqhkjOPQQDAgNIADBFAiEAgZo3Yt65
    LqTDrGGFRjvbbUYDeWTijGIqnE9lbK/7xskCIB710GTd9xrhllTKfOFzQ13kBOOr
    hXgRl8IdgszIyHqf
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.5
        linkerd.io/proxy-version: stable-2.13.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b7b269805d7c75f9c59e7e0c30939b16ac2d21e4d2ecf4305b2db36222760476
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.5
        linkerd.io/proxy-version: stable-2.13.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b7b269805d7c75f9c59e7e0c30939b16ac2d21e4d2ecf4305b2db36222760476
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  concurrencyPolicy: Replace
  schedule: "46 20 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.13.5
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.13.5
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.5
        linkerd.io/proxy-version: stable-2.13.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b7b269805d7c75f9c59e7e0c30939b16ac2d21e4d2ecf4305b2db36222760476
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEzTWpjeU1ETTJNVEphRncweU5EQTNNall5TURNMk16SmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFcXAvMGgyYVB5TlVDZFNXSlJERVNWdjkrU2FtdUhJaEZyMXIvYWt0ZW05NjRpMXJ0ZkRTTXk1SDdYdHY2CiAgICAgICAgRjFaT0c1ci9qK2R0NVlCaTRhenhvWEx4ZktOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlRRNm5UK2RqVGVVK1ArQk8xWEVlVm5HcEFxeXpBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQWdabzNZdDY1CiAgICAgICAgTHFURHJHR0ZSanZiYlVZRGVXVGlqR0lxbkU5bGJLLzd4c2tDSUI3MTBHVGQ5eHJobGxUS2ZPRnpRMTNrQk9PcgogICAgICAgIGhYZ1JsOElkZ3N6SXlIcWYKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUFRMFViZks2R3NxQXh1ZzZUSVgwelEwckxnVWhDSEcxRjhjQVVvdXI0aG1vQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVxcC8waDJhUHlOVUNkU1dKUkRFU1Z2OStTYW11SEloRnIxci9ha3RlbTk2NGkxcnRmRFNNCiAgICAgICAgeTVIN1h0djZGMVpPRzVyL2orZHQ1WUJpNGF6eG9YTHhmQT09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU16QTNNamN5TURNMk1USmFGdzB5TkRBM01qWXlNRE0yTXpKYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVxcC8waDJhUHlOVUNkU1dKUkRFU1Z2OStTYW11SEloRnIxci9ha3RlbTk2NGkxcnRmRFNNeTVIN1h0djYKICBGMVpPRzVyL2orZHQ1WUJpNGF6eG9YTHhmS05oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCVFE2blQrZGpUZVUrUCtCTzFYRWVWbkdwQXF5ekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBZ1pvM1l0NjUKICBMcVREckdHRlJqdmJiVVlEZVdUaWpHSXFuRTlsYksvN3hza0NJQjcxMEdUZDl4cmhsbFRLZk9GelExM2tCT09yCiAgaFhnUmw4SWRnc3pJeUhxZgogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KcHJveHlJbml0OgogIGt1YmVBUElTZXJ2ZXJQb3J0czogNDQzLDQ0Mwo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
