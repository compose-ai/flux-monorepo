---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: model-server
  name: model-server
  namespace: model-server
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: model-server
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
        sidecar.opentelemetry.io/inject: "model-server/opentel"
      labels:
        app: model-server
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: compose
      containers:
        - name: model-server
          image: us-docker.pkg.dev/compose-cluster/compose-ai-server/compose-triton:release-8b0640c
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 2000m
              memory: 12G
            limits:
              nvidia.com/gpu: 1
          ports:
            - name: newhttp
              containerPort: 8000
              protocol: TCP
            - name: grcp
              containerPort: 8001
              protocol: TCP
            - name: newhttp-prom
              containerPort: 8002
              protocol: TCP
          livenessProbe:
            failureThreshold: 4 # 4*20s = 1:20 for recovering from failure
            httpGet:
              scheme: HTTP
              path: /v2/health/live
              port: 8000
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 20
          readinessProbe:
            failureThreshold: 20 # 20*15s = 5 min startup time required
            httpGet:
              scheme: HTTP
              path: /v2/health/ready
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 3
          env:
            - name: DYNACONF_PROCESS_COUNT
              value: "1"
            - name: DYNACONF_FLUENT_LOG_LOCATION
              value: "/fluent-bit-input-logs/fluent-bit-input-logs-model-{time}.log"
            - name: ENABLE_METRICS
              value: "true"
            - name: DYNACONF_LOG_LEVEL
              value: "INFO"
          volumeMounts:
            - mountPath: /fluent-bit-input-logs
              name: fluentbitonlylogs
            - name: models
              mountPath: /models
              readOnly: false
            - name: cupy
              mountPath: /.cupy
              readOnly: false
            - name: transformers-cache
              mountPath: /.cache/huggingface/hub
              readOnly: false
            - mountPath: /dev/shm
              name: dshm
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
      volumes:
        # The name of this volume must be fluentbitonlylogs for fluent bit to be able to find all the logs files
        - name: fluentbitonlylogs
          emptyDir: {}
        - name: cupy
          emptyDir: {}
        - name: transformers-cache
          emptyDir: {}
        - name: models
          persistentVolumeClaim:
            claimName: model-pv-claim
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-pv-claim
  namespace: model-server
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: azureblob-fuse-standard-grs
  volumeName: "model-csi-gcs-pv"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: model-csi-gcs-pv
  namespace: model-server
  annotations:
    pv.beta.kubernetes.io/gid: "1001"
spec:
  storageClassName: azureblob-fuse-standard-grs
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 10Gi
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: blob.csi.azure.com
    # Make sure this is globally unique or you may run into issues with volumes mounting / attaching
    volumeHandle: model-server-models
    volumeAttributes:
      storageAccount: composeclusterprod
      containerName: model-server-models
      gid: "1001"
      uid: "1001"
      dirMode: "0775"
      fileMode: "0664"
      implicitDirs: "true"
    nodeStageSecretRef:
      name: azure-model-storage-secret
      namespace: default
