---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: context-server
  name: context-server
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: context-server
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
        sidecar.opentelemetry.io/inject: "true"
      labels:
        app: context-server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - context-server
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: context-server
          image: us-docker.pkg.dev/compose-cluster/compose-ai-server/context-server:release-6fb52e3
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 1000m
              memory: 2Gi
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-prom
              containerPort: 9900
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 15
          readinessProbe:
            failureThreshold: 10
            httpGet:
              scheme: HTTP
              path: /readinessz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          env:
            - name: DYNACONF_MODEL_SERVER_URL
              value: "model-server.premium-model-server.svc.cluster.local:8000"
            - name: DYNACONF_NUM_RETURN_SEQUENCES_CIRCUIT_TIMEOUT_SECONDS
              value: "0.7"
            - name: DYNACONF_FLUENT_LOG_LOCATION
              value: "/fluent-bit-input-logs/fluent-bit-input-logs-context-{time}.log"
            - name: ENABLE_METRICS
              value: "true"
            - name: DYNACONF_LOG_LEVEL
              value: "INFO"
            - name: OTEL_PROPAGATORS
              value: "b3,b3multi"
            - name: OTEL_TRACES_SAMPLER
              value: "parentbased_always_on"
              #value: "traceidratio"
            #- name: OTEL_TRACES_SAMPLER_ARG
              #value: "0.1"
          volumeMounts:
            - mountPath: /fluent-bit-input-logs
              name: fluentbitonlylogs
            - name: models
              mountPath: /models
            - name: cache
              mountPath: /.cache
          securityContext:
            runAsUser: 1002
            runAsGroup: 1002
      volumes:
        # The name of this volume must be fluentbitonlylogs for fluent bit to be able to find all the logs files
        - name: fluentbitonlylogs
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: models
          persistentVolumeClaim:
            claimName: model-pv-claim-context
      securityContext:
        fsGroup: 1002
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-pv-claim-context
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: azureblob-fuse-standard-grs
  # Make sure this is globally unique or you may run into issues with deploying
  volumeName: "model-csi-gcs-pv-context-premium"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: model-csi-gcs-pv-context-premium
  annotations:
    pv.beta.kubernetes.io/gid: "1002"
spec:
  storageClassName: azureblob-fuse-standard-grs
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  persistentVolumeReclaimPolicy: Retain
  csi:
    # Make sure this is globally unique or you may run into issues with volumes mounting / attaching
    volumeHandle: premium-context-model-directory
    volumeAttributes:
      storageAccount: composeclusterprod
      containerName: model-server-models
      gid: "1002"
      uid: "1002"
      dirMode: "0775"
      fileMode: "0664"
      implicitDirs: "true"
