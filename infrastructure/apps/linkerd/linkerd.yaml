---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU93ZzJEb0FrVEN4QzNRZ0NoZXZpK1l3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak14TVRJek1EQTFOalV6V2hjTk1qUXhNVEl5TURBMU5qVXpXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU1oS0IwU01DYWRTN2puek1wTkcyTzZnS0FTaWd1QnVGV29RY3cxZEhrVWRHb3laaUVkagpSckNLUDh3bklRME54bVdOVzhvUExZQVV4MGdTUGhyeW5LUmNaNkpzemx6SXZsUGhlbkxsVCtZWk5ralNiTDFrCjBoM09HdjZwWFZIVVJNcHhZaTd6YWtETTMzQ1FSajBWNWs0VkRYa1VueG9oNVpoRkEyZnRUUEIzN2gzbUZuS24KRE1FVU5IWFMxUzRJdEk3SGxTalpJSXVhOUxxeDltc3dPS3B3WFZSZDNFM3g2eW13c045Q3dYblVzZGpyV1dpagpIMkhCaHhtdmU2bFkyMEpvekJwRkNCdHA3S2dJWjh4SEdBK1FpSVh1K3RHcHdSZk9PL1pGMzlIT0Y4RWYvOXo0CkROM2kwL0hHeGxtV1krcFlkNmxMQTJadHBlTXRSbllwOEljQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBRjhSaUpkdS9KeDlWa3hpaUdJczhDTHdNQUFWTlJzcXpBQzRjcG1CNnEKWU1sY29UUC9OaVVaWXMrVy9qVFVuZk1YaW5mbkU4OXl6dDVMVkhvd3NBdzZZSmYwdzQwRnovMmJtK0E0SmdOQwpadlVRdERVZ2NQM3BhREhYU2pSeXVTN1lPNFFyMVVGaGxOdXhFam5uM2hDSkVQTHNDL3A1b25MTXpRSFN2dHdsClRzOHFhSzhUTE1WNnN2N28wQy96OXFTSjBDWWtBVzJYaGNMQVYxcVFPZHJjeGI2VzExSEFjZHlrTmNadlRkRmUKdjFpT0hOemRXYnQxcnVYQkJ3c0UzTWlYeXloOVdNM29wV1YveFI3b3RiNGtFK3dJczE2VHMxTjFYanFUZHVoawpoeTA1SlFsZ01xYS9sUkFJcVpOSmxOR0wrZlJMaTU3c1VsQ2RSNGJLS1JyQgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUVvSFJJd0pwMUx1T2ZNeWswYlk3cUFvQktLQzRHNFZhaEJ6RFYwZVJSMGFqSm1JClIyTkdzSW8vekNjaERRM0daWTFieWc4dGdCVEhTQkkrR3ZLY3BGeG5vbXpPWE1pK1UrRjZjdVZQNWhrMlNOSnMKdldUU0hjNGEvcWxkVWRSRXluRmlMdk5xUU16ZmNKQkdQUlhtVGhVTmVSU2ZHaUhsbUVVRForMU04SGZ1SGVZVwpjcWNNd1JRMGRkTFZMZ2kwanNlVktOa2dpNXIwdXJIMmF6QTRxbkJkVkYzY1RmSHJLYkN3MzBMQmVkU3gyT3RaCmFLTWZZY0dIR2E5N3FWamJRbWpNR2tVSUcybnNxQWhuekVjWUQ1Q0loZTc2MGFuQkY4NDc5a1hmMGM0WHdSLy8KM1BnTTNlTFQ4Y2JHV1paajZsaDNxVXNEWm0ybDR5MUdkaW53aHdJREFRQUJBb0lCQVFDazVLVjFIcUYzK3dPYgovQWZBVG95Y2NJaGh3SFZsVmR3VmRUTnpaaDFjb3loUFpydFdvbm41TCtoMEtDYkN1M3VCOGM0RzNWWUZZNVhwClZQT0NkZ2pXSENsS0JMQWtuVFJzbEc2ZUZ3SWZtdFFoUWZRNlBMM3J3ZHBobklmeXJZSnc5TVh6aDMwTG1sKysKS1ZsYVF5UlhWbWZBTG1VS082dnRINnc5TEpXeVJtVTF0TnlLVGhpUEdUNmRBSS9IK0ppeGcrQ01UVWNNM3JwZgpZR3FNamhJRW1hSDVpSk5OcnpEUHVjMWp2WW0welNYUlozc2kzMERhVzJLd05HOGkybEdlZnlzYUFvRHdFdUJHCmFvYUc5SmF5YUF0V25IK0I3MWVVdmJmWDJZeStKeDJNUkNiNVlHaFN2OXlwTmUzWE14OEZsMm8ybnJEWUJQdjUKMWpXWGxmblpBb0dCQU94OHY1YlA3RE41V3BRYm5qT2hqQWlzTjBnR2pxWDZNYm4zU2FmWlIycXlmUGMzNXdVZgp5L1BPMmVtbllSSmxWTU1MOEVVdkI2cktSK0QvaUJ2dkhHWEpxNDRjaUhoeXB2aTg0TXZHZmV6eUQwdVdUSW5WCkF3VFAxVHhaem1qS1p3M0JyQVc5bGJXaEoyckxKRVcyU3pLSHgwdXpvc01SYUNVRWtWcm9TQ3dyQW9HQkFOalEKclhxdWNRYlZROWh1K09mbWpJdEUrdXg5Q0xjMFdycUY4T0RwSkhUMjRvZGNlT2UvWExHbGJEUExGZ2psUWV2awo4eFljbXhkbDlDUjBrRG11NDdLWCtyTzhFbVhPNjFRWXpldTNpbDZKekltY3FqTElLOFBJT0dkZi9tQ21URm9BClI3QmRJbkRPUHdrKy9jSElLMitFcHFET21XK29OZ2NFWlJwR3RYTVZBb0dCQU9qNjJYRkZkRWtkMUN1M3JicmwKKzJTTDdZWnExMXdUU2F3UlFLSTVBQS9RdWlhQUQzdlA0SWxZanZ5UEpxWU42RnlqeFZrVFJUVndSVElYN01yQQpYYlMxNHVxRmw3azZFdDlZalFxVWlYakczR1MyTkw5UmVNRGoxQXE1MncwSDRsRCtMWEFXWDRocHRNQ1VVeTdPCnNmU2RLYTJkMHNya3VqcEY3c0dsdDN5ekFvR0FTbmFBM2gyREhBR3FwMjZWZGErc25UZzNwWGpid1cvdHFSblAKUEs5Vm9nWVlqcnlubVpBVFdiK2loYmM5L2hnZXA5R2QydjVBRmEwaVNGTHdKWjkyL0NOT0t1Und2UjV2bkJaWQp3cGZxb2NWWnhmbFVTdFNNazFUMGFpeUJ4TmZZYVNDbmZsNitNVmZrTmx5MzhoRzVPVGVwc3BqQ0FhTVh5eGtyClQvYnc0bkVDZ1lBWUtnZmVCMDJEWUl0aUg2bGZJUkNDeW1Jb01Xd0RNbzliZkFCVUFpSTVKVEVyMDBldEp3OU8KeUMwcjNQWXR0b0xtZmJIeWkzeEM1L0hLOWtuQUJXb2dIaWlDWCt6dWxkaGJGUVdyTVZFUmpkdVJkbTNBRFRIYgo2MHBuSmtvWkxZUGlZRExuaUo4dHZMZGxTNHl1eFpXa0JPS1NERFpIQXhRcnVid09LYlBuQVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU93ZzJEb0FrVEN4QzNRZ0NoZXZpK1l3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak14TVRJek1EQTFOalV6V2hjTk1qUXhNVEl5TURBMU5qVXpXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU1oS0IwU01DYWRTN2puek1wTkcyTzZnS0FTaWd1QnVGV29RY3cxZEhrVWRHb3laaUVkagpSckNLUDh3bklRME54bVdOVzhvUExZQVV4MGdTUGhyeW5LUmNaNkpzemx6SXZsUGhlbkxsVCtZWk5ralNiTDFrCjBoM09HdjZwWFZIVVJNcHhZaTd6YWtETTMzQ1FSajBWNWs0VkRYa1VueG9oNVpoRkEyZnRUUEIzN2gzbUZuS24KRE1FVU5IWFMxUzRJdEk3SGxTalpJSXVhOUxxeDltc3dPS3B3WFZSZDNFM3g2eW13c045Q3dYblVzZGpyV1dpagpIMkhCaHhtdmU2bFkyMEpvekJwRkNCdHA3S2dJWjh4SEdBK1FpSVh1K3RHcHdSZk9PL1pGMzlIT0Y4RWYvOXo0CkROM2kwL0hHeGxtV1krcFlkNmxMQTJadHBlTXRSbllwOEljQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBRjhSaUpkdS9KeDlWa3hpaUdJczhDTHdNQUFWTlJzcXpBQzRjcG1CNnEKWU1sY29UUC9OaVVaWXMrVy9qVFVuZk1YaW5mbkU4OXl6dDVMVkhvd3NBdzZZSmYwdzQwRnovMmJtK0E0SmdOQwpadlVRdERVZ2NQM3BhREhYU2pSeXVTN1lPNFFyMVVGaGxOdXhFam5uM2hDSkVQTHNDL3A1b25MTXpRSFN2dHdsClRzOHFhSzhUTE1WNnN2N28wQy96OXFTSjBDWWtBVzJYaGNMQVYxcVFPZHJjeGI2VzExSEFjZHlrTmNadlRkRmUKdjFpT0hOemRXYnQxcnVYQkJ3c0UzTWlYeXloOVdNM29wV1YveFI3b3RiNGtFK3dJczE2VHMxTjFYanFUZHVoawpoeTA1SlFsZ01xYS9sUkFJcVpOSmxOR0wrZlJMaTU3c1VsQ2RSNGJLS1JyQgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Fail
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRZHZCRHlIaUxrYk5pOEo5cW1aK0xJekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNeE1USXpNREExTmpVMFdoY05NalF4TVRJeU1EQTFOalUwV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURwM3J5Y2FHbGVpdU9TeTBpVkE5N1RhY2VzTEZEam1ZOTg4TlkxUkJPZgpCbEVYYXRnMkhMRTMrdkk4QU5wYnBFSkp0QnJLenJMYkpPOHNmeUEydFFvNzVFQVJaTUpaSUs0emtTVXBONGN1ClMyVms5RVdLMm1qV282LzhTR0Jzdk1VUGhqZ2ZyaTRNSWpubnFXZnYxRGYyemhBNzJFcEhvRGFXYng3SDZyZHQKMGVaR1BlMGRQM095ZEo5dGx0bjFkL3VKM2U4M1dhU0RYWGdQU2xSc1d3VVh6QzA4TmZNVTlVb2Nxckx4dHZmTQo0UTkreWYrc1V1eDRBYW9Kc1NrSHhVZTFkdVNRTXdPNENDclIzMzF4cEttSTgybk45WlBwbW53K0ZzdUNlYS9tCnMwL2U3S1dFb244TVhpekFncGNEMUxaOHNqME1BZU9yT3ovbXdSV1JGTXVKQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLWHpBNnpFTE9hSU96TTJta3V3ckVMSUgxM0cKWi9tOTVndnZMTzQ0dzdVZnd0Q2gzclA1OVpOZDVNTThFdFpOVHVocFprdkkvbHZHcXpOOXBhVWV6OFdOdE1ROQpNMXN1RFppVFgyVnN1TjdldmNPdXcyUFJVVC9VTFc1aXhoTFZIODgyQkt5TDRvL0FrUVZKNG0rTUdXYnJMVElqClJ0eVpGTU43RFNCazZCUTVBVWo2eVVxa2JYcmh0NUxMNkJhbjhLa2gxMVFMWXBaS3pkY0plemhPWHV4c01yVXgKRlJzWEQ4Tm81VVZsYjkwQStWMXlFekp2TDcxTjhyL2F0eGNGK2lXNUY2YTB4VnRXeG1lMVk3ZjhudEZSSWlMNQpGMnZjU3RPY3JON0x6U0g0NDZLMmhuWWJZT3JnR0ZlMWMvYlkrOFlLOWp4M0tkOCtxaUJNZTRnN2dIQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNmQ2OG5HaHBYb3Jqa3N0SWxRUGUwMm5IckN4UTQ1bVBmUERXTlVRVG53WlJGMnJZCk5oeXhOL3J5UEFEYVc2UkNTYlFheXM2eTJ5VHZMSDhnTnJVS08rUkFFV1RDV1NDdU01RWxLVGVITGt0bFpQUkYKaXRwbzFxT3YvRWhnYkx6RkQ0WTRINjR1RENJNTU2bG43OVEzOXM0UU85aEtSNkEybG04ZXgrcTNiZEhtUmozdApIVDl6c25TZmJaYlo5WGY3aWQzdk4xbWtnMTE0RDBwVWJGc0ZGOHd0UERYekZQVktIS3F5OGJiM3pPRVBmc24vCnJGTHNlQUdxQ2JFcEI4Vkh0WGJra0RNRHVBZ3EwZDk5Y2FTcGlQTnB6ZldUNlpwOFBoYkxnbm12NXJOUDN1eWwKaEtKL0RGNHN3SUtYQTlTMmZMSTlEQUhqcXpzLzVzRVZrUlRMaVFJREFRQUJBb0lCQUNxeWhLTFZtUzh1a2ovUgpwMDIxYURBVzV1SnpNTTFzMHJxUHlidnQwdHM4cnY5a2ZWYmJ4Q3NoUUtwZHlYL2pyRXFDZkVXOG1RRFRiR3NtClJuNVdiU2prRWlKYXovU3Z0NzRvYUsxdXV0cGozMzRmN3JaY0M3bnNKb3didHFjRGk4SzYwWEpQUFk3dmpMelQKdStzWVJxTmptYWtqWXVSU3hzU09Rd05pd2R4bGxaWDZDbmZFbGF5ZXdnTmFnNytLbHFDTEVXZ3BmZ2E5YkdlegpWUkJnS0VWamQzanIvSHJKUEhqWDdFOURWaCs4Y1ZsU2MvSGpNR2Z5YWVseHF0VGRGUkNLamQ0WHRYQTNyc09lCnZZZFMwaUpMbkc0VUxLR0FXWEhWRUdXWFQ5S2tENGRiUVoxQ1RncHA2eHVyV0IybGc4V01aQm4zcTVYN1hycEsKNWRGL2dVVUNnWUVBOEVvdGdkZUlRcWJ5ZU82clBoUFFxWnVkZXBrajNQMEs0S1ZpYkdmeHNBZGR2VThJdDNOSQpacGJSdFYzcUswMVlvREtoOUpRZHl2c3dvdGdTS2UyRkdWK0ovRGNUT2lJV3J6TEdaRFVmL3BqZjlZRTZVYTFLCnBrTC9DRTF5WWU0RXIraGgyYUVYT3I3WjRWa2dUbmJZYmUyb2lNV1Iva1NBZjl4bG04N2RnR2NDZ1lFQStTa2MKTXRXZlNIZ0tLOEc2V284ZmZ3MHMxakwwbFNIOUJ0eUhTY2ZWMitqclNNa05CaFUzNmFsbUhSRmhFQ0RvcThSUgpzZlBmN1R4N3Yyb0hmTVVPQW5DTXhJK0ZiVjhsYnFDMm5GNllHMDVEOXR6Mzl2TndPdXdLYlphNlN0NjdTWm5XCnkzTXM0a0NOUlFQdFJsTmxaRWxJeVV5ckN5RWhUbDlEZlJhQ0hvOENnWUVBeEE2eUhNd2dXTW5nODMxQmFiQS8KUS9ROXhNZG85S25la3pjK0hGZWZZdEpQME9QSXArNC9ONzE5TkMrQm5uMUlmOFZ3VVovOHd4NjdLMU9EVm9SLwpZaG1LKzZod1hyRnJzdDJKOUQ5SWNMS0pvY1lrTUhwbGUwMFV5OUJ0TUt4RlZNWVYrTDB3dC9UNno1eXArSHVOCjBmdmsxRnZuNkFBNm5KaldxdzladWFjQ2dZRUFwS0YwUDJhRlM1WDlhbklrRndnd2tIdDlINzhsZXBDdHBtWDYKZ2xhblNSbjZ0T29iVCtTZlFDWXRFWkhWSjVvSEFzL0NCeW9UMEtaQlFmWG1JcHYxcU1rRFNqRm13U0M0RkFQZgpCUzAvcGZNdDF5U2tOeWtkQStISTlpWTh5NUdtQUhqRXcwTkQ2ZThyS09ueVVxQnlBelNsQWxWRlF5Sk41b0h0Cmp1NWJaYU1DZ1lFQXYvSjFRV0g2K3ZNbTNDUVRhRmtsQnpaNW5xWUtCVEx1aW9FK0lCYU1MQkpUR1QwaXkxSXIKTkZEODAzOWtOeXU2Z04va25QMnVCNGVMV1ZnREJMd28rYm1pbVhSYXpQYUF3ckxxdnlOdlB2WEZVU3M2RXFpUQpEOHVIdlRWeUpteFZJc2ZXYzRpWEw1dGI0bkx3ZTVyS09oMXB6ay9NaW9hWEswZ1pYcDFiVjA4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRZHZCRHlIaUxrYk5pOEo5cW1aK0xJekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNeE1USXpNREExTmpVMFdoY05NalF4TVRJeU1EQTFOalUwV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURwM3J5Y2FHbGVpdU9TeTBpVkE5N1RhY2VzTEZEam1ZOTg4TlkxUkJPZgpCbEVYYXRnMkhMRTMrdkk4QU5wYnBFSkp0QnJLenJMYkpPOHNmeUEydFFvNzVFQVJaTUpaSUs0emtTVXBONGN1ClMyVms5RVdLMm1qV282LzhTR0Jzdk1VUGhqZ2ZyaTRNSWpubnFXZnYxRGYyemhBNzJFcEhvRGFXYng3SDZyZHQKMGVaR1BlMGRQM095ZEo5dGx0bjFkL3VKM2U4M1dhU0RYWGdQU2xSc1d3VVh6QzA4TmZNVTlVb2Nxckx4dHZmTQo0UTkreWYrc1V1eDRBYW9Kc1NrSHhVZTFkdVNRTXdPNENDclIzMzF4cEttSTgybk45WlBwbW53K0ZzdUNlYS9tCnMwL2U3S1dFb244TVhpekFncGNEMUxaOHNqME1BZU9yT3ovbXdSV1JGTXVKQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLWHpBNnpFTE9hSU96TTJta3V3ckVMSUgxM0cKWi9tOTVndnZMTzQ0dzdVZnd0Q2gzclA1OVpOZDVNTThFdFpOVHVocFprdkkvbHZHcXpOOXBhVWV6OFdOdE1ROQpNMXN1RFppVFgyVnN1TjdldmNPdXcyUFJVVC9VTFc1aXhoTFZIODgyQkt5TDRvL0FrUVZKNG0rTUdXYnJMVElqClJ0eVpGTU43RFNCazZCUTVBVWo2eVVxa2JYcmh0NUxMNkJhbjhLa2gxMVFMWXBaS3pkY0plemhPWHV4c01yVXgKRlJzWEQ4Tm81VVZsYjkwQStWMXlFekp2TDcxTjhyL2F0eGNGK2lXNUY2YTB4VnRXeG1lMVk3ZjhudEZSSWlMNQpGMnZjU3RPY3JON0x6U0g0NDZLMmhuWWJZT3JnR0ZlMWMvYlkrOFlLOWp4M0tkOCtxaUJNZTRnN2dIQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Fail
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["*"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUtuUUdaVnppNEhjVG5Pb3Q0WU15OUl3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TXpFeE1qTXdNRFUyTlROYUZ3MHlOREV4TWpJd01EVTJOVE5hTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRGI0Ym9YRGxVblorNDZUWDBxSGJQMWkxTmthbFp3L3NObzdnV1I5WGdzS1JqMwpFdXhBSWZOYkMrbHN6UnVaRDI4dW9FM2hEN1ZXY3hmTGNhWi8rRHRqdVp3MitteGc3U3pHRURKMHE1YUNVeUJSCnJqYWFDNm1LNElnTldxbTNGYXBWSHlndzRNdXUzbHd5TGZIcnJiQ1ViVlROb0tNdS9yb3JUV0FrQ1RtQ1NsRUgKaEpPd0lxYk9FMVRzNlFaVnd4L3FGbk1adm8ybldtMWVDS0Z2ZG84eFlyRzFTTkVpWGhEZFZNelhiOCtpWGNoYgp0YThPS1Q2TU12ZmdJOTB1aWJITlRzdyttZlVqdFhEM3R5aExIbXFvcWRlYmIzTFBlZ2lwSGpzcWFYREpiaGZUCnhmK3U2T2xxWk5IRW8zY3lSTzgvaDRSRFpoaSs1WU9WZENKVWtodVJBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUM4SVVReDN4U2lOWktoNy9xRUZKRGliNUFlVFlLZjZzTzUKYjkzNUFUblBSY2hDZkhiTXRFVThGRGVJWnhKS2o3dDgwOWdubDl1Mkl2bG1JRGF5OVZCTlhPWllaanU4NC9nbQpnbU9TSVVkVkJFRGc2bklaWkNtTExzcnhwa2tCQVFOcmJUWDM1SDE0OHZzMTVNTlhGQ0pQenlRZndhSnhDOWRmCmxDaXUxaFQza2JHRXF6ajJCWFpBQTlsNHJmQUJDSjh6b1NudmgxMEExZFg3NEEwNjVEdGRQWXVCU0UzYWYraTEKdWdlRk5lbU44SlRUdTg4bndQNFc3cmxPK3ROYUdqMTdBMXJxQlA3dkE3TlEvMXhZNUI5T2hQK1AwV2w5bjRoMgpWWU1LQVVGck15dEkyeUZDcXlzRXBJcWVXME4vRytPMUF2akZkTTIxZnNPOGxHRUJWQWtJCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMitHNkZ3NVZKMmZ1T2sxOUtoMno5WXRUWkdwV2NQN0RhTzRGa2ZWNExDa1k5eExzClFDSHpXd3ZwYk0wYm1ROXZMcUJONFErMVZuTVh5M0dtZi9nN1k3bWNOdnBzWU8wc3hoQXlkS3VXZ2xNZ1VhNDIKbWd1cGl1Q0lEVnFwdHhXcVZSOG9NT0RMcnQ1Y01pM3g2NjJ3bEcxVXphQ2pMdjY2SzAxZ0pBazVna3BSQjRTVApzQ0ttemhOVTdPa0dWY01mNmhaekdiNk5wMXB0WGdpaGIzYVBNV0t4dFVqUklsNFEzVlRNMTIvUG9sM0lXN1d2CkRpaytqREwzNENQZExvbXh6VTdNUHBuMUk3Vnc5N2NvU3g1cXFLblhtMjl5ejNvSXFSNDdLbWx3eVc0WDA4WC8KcnVqcGFtVFJ4S04zTWtUdlA0ZUVRMllZdnVXRGxYUWlWSklia1FJREFRQUJBb0lCQVFDUzZ6cTZXUnRRMzBMdwp0Z0loK0FMYzJLRjZBUXVOS00xTStXM0RYeTlTNG9zSjNCejdwVFBEN0N1bVJVNWhjVXlxN1BYY29mQmF1VUIyCjhaTjlBbEk4aWpMMUVWTUZXTFNJQ3g2TGtuTlkxVTVOQllqNldUeUp6UWxiVXU3L3BIeFJzQ1hjc3ZlbCtuSEUKSGFyOS9PcDE0cSs5VGM1N2dqekcza2FWRFl6ZG5xa3ZKS3BteWJPb1lvY0dYNHNLRklMRjJvT3lXNWpQdGpDego3c2ExNm9qS0ZiZGx0d0pXWjZwZWlYUFJDWEpFRlJLQU8vOWJ3QmRFVDhxTkRVNUV2dXp3RkhxUHVqMmFzdDVzCk1OblhaSGpwUVhHQlBrYUZPUXZrNERRSnJZellZaEIxaUlQRFI5bUdqMi9nTU5EbWVpRUlYRTBxZ2RWaWkvVnoKdHZFcjVNb2hBb0dCQU9LNXZad3JlTlhkSjlLeTk0N2ZZbFF0bEpMZlpjSUFvNWlpYlZTRXlTTXNjS0EyYUNrOApRRlpFMEEzL1dDZnZ1N05vbUJQQlU2L25Pc2pHYnU3NFptNzF0TS9ERWJJRVhQUXhROXBNZ3N3c1NnUlhyU2QyCldUZUZMRGoyUXRpNEJoc0tTRVRVeXhHcDBrejUrL0dQNXJmSXdPM3RoVUljQ1ZnK1o0SFB2UVRGQW9HQkFQaEYKeE5wdWFaeWtPdDNzT05uTHRjMzZwOFhZWk4zZkpYdTFQTW4xM0F2VEFXQmMwOTFEN3g2UUIvUHljMnRWZVV2UQpPU3JlcG9OLzJqTkNCYTQ3VEhkVmlvOS9wNmpadWt3cUoxMGxiSTVzSWI5QllBTG9DMGovVFRERE91OXhwcHNUCjl1eGVtbEFZNmFocmVlR1A3R2h3aVRmRHRXb1NlakJlbktKZmYrQmRBb0dCQUxnN2dpM1N6Vi9MVTc3TW1vbEkKVDloaktXV25qa0owem5zTEVaZ3FSbDhFajRoQWJhZUVSQ3RWdzFKOGVTQUttQldUR25DREdnUEgrMmFHaUVJNwpLdEZqYTBlZ0ZWTDRaS2d4R0JmZE1EUEVrV2l4N2d3eENSSXFidUxpaVRNZFppaTIxRDdLUXpEWk5BQkU2a3RDClNaSngyUVA5aTlsS2V2VnYwQ0FWdEZ5WkFvR0FHTnJiUDBib2VjOFRPWjVwZnB4ZlFoVEM4UktkM254MWd6SDgKdVBkTkpUM2xtR0VTc01jWlRFVDlGdFlCNmcvdmljQjV5S25ybjZTUUVxdWNaL24xeU1pZWk0a3JIc05WWEVTbwpGaklsOFFnd1JMWmx4MFMxeElRU2xUd21UVXhpY29vSUlWZkRPUnVWWU5BSnJxUTY5YVcyaHdlbnhNdSt3ZExtCitYWjRGZDBDZ1lBNFFJREtjdkV6V05DaUlHVFRUWmxQc3ZQVWV0ZXJ5S1R3ZlBhazdibDdZdkJJOVFacDdiZzIKQVJvb1lTRGdGb0VHcE1tWkhRdzJDU1phNi9idVN1QnBvSGNSU21sRUZVZlAyY1BtcHkxNUl0Zko3dktJUi9VbApsbU5sVXhOMjZzeG1sb2p3WGcxVjFXdGxiSzhidnV1anF4SHl3dktIVVdMYVU4Z0NwRnpqZlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUtuUUdaVnppNEhjVG5Pb3Q0WU15OUl3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TXpFeE1qTXdNRFUyTlROYUZ3MHlOREV4TWpJd01EVTJOVE5hTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRGI0Ym9YRGxVblorNDZUWDBxSGJQMWkxTmthbFp3L3NObzdnV1I5WGdzS1JqMwpFdXhBSWZOYkMrbHN6UnVaRDI4dW9FM2hEN1ZXY3hmTGNhWi8rRHRqdVp3MitteGc3U3pHRURKMHE1YUNVeUJSCnJqYWFDNm1LNElnTldxbTNGYXBWSHlndzRNdXUzbHd5TGZIcnJiQ1ViVlROb0tNdS9yb3JUV0FrQ1RtQ1NsRUgKaEpPd0lxYk9FMVRzNlFaVnd4L3FGbk1adm8ybldtMWVDS0Z2ZG84eFlyRzFTTkVpWGhEZFZNelhiOCtpWGNoYgp0YThPS1Q2TU12ZmdJOTB1aWJITlRzdyttZlVqdFhEM3R5aExIbXFvcWRlYmIzTFBlZ2lwSGpzcWFYREpiaGZUCnhmK3U2T2xxWk5IRW8zY3lSTzgvaDRSRFpoaSs1WU9WZENKVWtodVJBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUM4SVVReDN4U2lOWktoNy9xRUZKRGliNUFlVFlLZjZzTzUKYjkzNUFUblBSY2hDZkhiTXRFVThGRGVJWnhKS2o3dDgwOWdubDl1Mkl2bG1JRGF5OVZCTlhPWllaanU4NC9nbQpnbU9TSVVkVkJFRGc2bklaWkNtTExzcnhwa2tCQVFOcmJUWDM1SDE0OHZzMTVNTlhGQ0pQenlRZndhSnhDOWRmCmxDaXUxaFQza2JHRXF6ajJCWFpBQTlsNHJmQUJDSjh6b1NudmgxMEExZFg3NEEwNjVEdGRQWXVCU0UzYWYraTEKdWdlRk5lbU44SlRUdTg4bndQNFc3cmxPK3ROYUdqMTdBMXJxQlA3dkE3TlEvMXhZNUI5T2hQK1AwV2w5bjRoMgpWWU1LQVVGck15dEkyeUZDcXlzRXBJcWVXME4vRytPMUF2akZkTTIxZnNPOGxHRUJWQWtJCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Fail
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.14.5
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 3
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.14.5
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
    destinationProxyResources: null
    destinationResources:
      cpu:
        limit: ""
        request: 100m
      ephemeral-storage:
        limit: ""
        request: ""
      memory:
        limit: 250Mi
        request: 50Mi
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: true
    enablePodDisruptionBudget: true
    heartbeatResources:
      cpu:
        limit: ""
        request: 100m
      ephemeral-storage:
        limit: ""
        request: ""
      memory:
        limit: 250Mi
        request: 50Mi
    heartbeatSchedule: ""
    highAvailability: true
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMzA3MjcyMDM2MTJaFw0yNDA3MjYyMDM2MzJaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEqp/0h2aPyNUCdSWJRDESVv9+SamuHIhFr1r/aktem964i1rtfDSMy5H7Xtv6
            F1ZOG5r/j+dt5YBi4azxoXLxfKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBTQ6nT+djTeU+P+BO1XEeVnGpAqyzAKBggqhkjOPQQDAgNIADBFAiEAgZo3Yt65
            LqTDrGGFRjvbbUYDeWTijGIqnE9lbK/7xskCIB710GTd9xrhllTKfOFzQ13kBOOr
            hXgRl8IdgszIyHqf
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources:
      cpu:
        limit: ""
        request: 100m
      ephemeral-storage:
        limit: ""
        request: ""
      memory:
        limit: 250Mi
        request: 10Mi
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMzA3MjcyMDM2MTJaFw0yNDA3MjYyMDM2MzJaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEqp/0h2aPyNUCdSWJRDESVv9+SamuHIhFr1r/aktem964i1rtfDSMy5H7Xtv6
      F1ZOG5r/j+dt5YBi4azxoXLxfKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTQ6nT+djTeU+P+BO1XEeVnGpAqyzAKBggqhkjOPQQDAgNIADBFAiEAgZo3Yt65
      LqTDrGGFRjvbbUYDeWTijGIqnE9lbK/7xskCIB710GTd9xrhllTKfOFzQ13kBOOr
      hXgRl8IdgszIyHqf
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: null
    linkerdVersion: stable-2.14.5
    networkValidator:
      connectAddr: 1.1.1.1:20001
      enableSecurityContext: true
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheus:
      enabled: false
    prometheusUrl: http://prometheus-kube-prometheus-prometheus.metrics.svc.cluster.local:9090
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      disableInboundProtocolDetectTimeout: false
      disableOutboundProtocolDetectTimeout: false
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 250Mi
          request: 20Mi
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.3
      iptablesMode: legacy
      kubeAPIServerPorts: 443,443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources:
      cpu:
        limit: ""
        request: 100m
      ephemeral-storage:
        limit: ""
        request: ""
      memory:
        limit: 250Mi
        request: 50Mi
    tolerations: null
    webhookFailurePolicy: Fail
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEzTWpjeU1ETTJNVEphRncweU5EQTNNall5TURNMk16SmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVxcC8waDJhUHlOVUNkU1dKUkRFU1Z2OStTYW11SEloRnIxci9ha3RlbTk2NGkxcnRmRFNNeTVIN1h0djYKRjFaT0c1ci9qK2R0NVlCaTRhenhvWEx4ZktOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVFE2blQrZGpUZVUrUCtCTzFYRWVWbkdwQXF5ekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBZ1pvM1l0NjUKTHFURHJHR0ZSanZiYlVZRGVXVGlqR0lxbkU5bGJLLzd4c2tDSUI3MTBHVGQ5eHJobGxUS2ZPRnpRMTNrQk9PcgpoWGdSbDhJZGdzekl5SHFmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFRMFViZks2R3NxQXh1ZzZUSVgwelEwckxnVWhDSEcxRjhjQVVvdXI0aG1vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFcXAvMGgyYVB5TlVDZFNXSlJERVNWdjkrU2FtdUhJaEZyMXIvYWt0ZW05NjRpMXJ0ZkRTTQp5NUg3WHR2NkYxWk9HNXIvaitkdDVZQmk0YXp4b1hMeGZBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMzA3MjcyMDM2MTJaFw0yNDA3MjYyMDM2MzJaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEqp/0h2aPyNUCdSWJRDESVv9+SamuHIhFr1r/aktem964i1rtfDSMy5H7Xtv6
    F1ZOG5r/j+dt5YBi4azxoXLxfKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBTQ6nT+djTeU+P+BO1XEeVnGpAqyzAKBggqhkjOPQQDAgNIADBFAiEAgZo3Yt65
    LqTDrGGFRjvbbUYDeWTijGIqnE9lbK/7xskCIB710GTd9xrhllTKfOFzQ13kBOOr
    hXgRl8IdgszIyHqf
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: PodDisruptionBudget
apiVersion: policy/v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.5
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 3
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.5
        linkerd.io/proxy-version: stable-2.14.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b7b269805d7c75f9c59e7e0c30939b16ac2d21e4d2ecf4305b2db36222760476
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: linkerd.io/control-plane-component
                  operator: In
                  values:
                  - identity
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: linkerd.io/control-plane-component
                operator: In
                values:
                - identity
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.14.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        resources:
          limits:
            memory: "250Mi"
          requests:
            cpu: "100m"
            memory: "10Mi"
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
          limits:
            memory: "250Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
kind: PodDisruptionBudget
apiVersion: policy/v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.5
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 3
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: e5b44ed5aa80eb0e9529579c0221b88d4573013207a813199987ef0223d6e1f2
        linkerd.io/created-by: linkerd/cli stable-2.14.5
        linkerd.io/proxy-version: stable-2.14.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b7b269805d7c75f9c59e7e0c30939b16ac2d21e4d2ecf4305b2db36222760476
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: linkerd.io/control-plane-component
                  operator: In
                  values:
                  - destination
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: linkerd.io/control-plane-component
                operator: In
                values:
                - destination
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
          limits:
            memory: "250Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        resources:
          limits:
            memory: "250Mi"
          requests:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.14.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.5
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  concurrencyPolicy: Replace
  schedule: "06 01 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.14.5
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.14.5
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            resources:
              limits:
                memory: "250Mi"
              requests:
                cpu: "100m"
                memory: "50Mi"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.5
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 3
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: 31378920f0060d45f3d03cd4c7ca93ac5890e11f8937dfd2745b24a6d14bacb7
        linkerd.io/created-by: linkerd/cli stable-2.14.5
        linkerd.io/proxy-version: stable-2.14.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b7b269805d7c75f9c59e7e0c30939b16ac2d21e4d2ecf4305b2db36222760476
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: linkerd.io/control-plane-component
                  operator: In
                  values:
                  - proxy-injector
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: linkerd.io/control-plane-component
                operator: In
                values:
                - proxy-injector
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
          limits:
            memory: "250Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        resources:
          limits:
            memory: "250Mi"
          requests:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
kind: PodDisruptionBudget
apiVersion: policy/v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.5
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: Y29udHJvbGxlclJlcGxpY2FzOiAzCmRlcGxveW1lbnRTdHJhdGVneToKICByb2xsaW5nVXBkYXRlOgogICAgbWF4VW5hdmFpbGFibGU6IDEKZGVzdGluYXRpb25SZXNvdXJjZXM6CiAgY3B1OgogICAgbGltaXQ6ICIiCiAgICByZXF1ZXN0OiAxMDBtCiAgZXBoZW1lcmFsLXN0b3JhZ2U6CiAgICBsaW1pdDogIiIKICAgIHJlcXVlc3Q6ICIiCiAgbWVtb3J5OgogICAgbGltaXQ6IDI1ME1pCiAgICByZXF1ZXN0OiA1ME1pCmVuYWJsZVBvZEFudGlBZmZpbml0eTogdHJ1ZQplbmFibGVQb2REaXNydXB0aW9uQnVkZ2V0OiB0cnVlCmhlYXJ0YmVhdFJlc291cmNlczoKICBjcHU6CiAgICBsaW1pdDogIiIKICAgIHJlcXVlc3Q6IDEwMG0KICBlcGhlbWVyYWwtc3RvcmFnZToKICAgIGxpbWl0OiAiIgogICAgcmVxdWVzdDogIiIKICBtZW1vcnk6CiAgICBsaW1pdDogMjUwTWkKICAgIHJlcXVlc3Q6IDUwTWkKaGlnaEF2YWlsYWJpbGl0eTogdHJ1ZQppZGVudGl0eToKICBpc3N1ZXI6CiAgICB0bHM6CiAgICAgIGNydFBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgICAgIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICAgICAgICBlUzVzYVc1clpYSmtMakFlRncweU16QTNNamN5TURNMk1USmFGdzB5TkRBM01qWXlNRE0yTXpKYU1Cd3hHakFZCiAgICAgICAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogICAgICAgIFFnQUVxcC8waDJhUHlOVUNkU1dKUkRFU1Z2OStTYW11SEloRnIxci9ha3RlbTk2NGkxcnRmRFNNeTVIN1h0djYKICAgICAgICBGMVpPRzVyL2orZHQ1WUJpNGF6eG9YTHhmS05oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgICAgICAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogICAgICAgIEJCVFE2blQrZGpUZVUrUCtCTzFYRWVWbkdwQXF5ekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBZ1pvM1l0NjUKICAgICAgICBMcVREckdHRlJqdmJiVVlEZVdUaWpHSXFuRTlsYksvN3hza0NJQjcxMEdUZDl4cmhsbFRLZk9GelExM2tCT09yCiAgICAgICAgaFhnUmw4SWRnc3pJeUhxZgogICAgICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgICAga2V5UEVNOiB8CiAgICAgICAgLS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCiAgICAgICAgTUhjQ0FRRUVJQVEwVWJmSzZHc3FBeHVnNlRJWDB6UTByTGdVaENIRzFGOGNBVW91cjRobW9Bb0dDQ3FHU000OQogICAgICAgIEF3RUhvVVFEUWdBRXFwLzBoMmFQeU5VQ2RTV0pSREVTVnY5K1NhbXVISWhGcjFyL2FrdGVtOTY0aTFydGZEU00KICAgICAgICB5NUg3WHR2NkYxWk9HNXIvaitkdDVZQmk0YXp4b1hMeGZBPT0KICAgICAgICAtLS0tLUVORCBFQyBQUklWQVRFIEtFWS0tLS0tCmlkZW50aXR5UmVzb3VyY2VzOgogIGNwdToKICAgIGxpbWl0OiAiIgogICAgcmVxdWVzdDogMTAwbQogIGVwaGVtZXJhbC1zdG9yYWdlOgogICAgbGltaXQ6ICIiCiAgICByZXF1ZXN0OiAiIgogIG1lbW9yeToKICAgIGxpbWl0OiAyNTBNaQogICAgcmVxdWVzdDogMTBNaQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU16QTNNamN5TURNMk1USmFGdzB5TkRBM01qWXlNRE0yTXpKYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVxcC8waDJhUHlOVUNkU1dKUkRFU1Z2OStTYW11SEloRnIxci9ha3RlbTk2NGkxcnRmRFNNeTVIN1h0djYKICBGMVpPRzVyL2orZHQ1WUJpNGF6eG9YTHhmS05oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCVFE2blQrZGpUZVUrUCtCTzFYRWVWbkdwQXF5ekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBZ1pvM1l0NjUKICBMcVREckdHRlJqdmJiVVlEZVdUaWpHSXFuRTlsYksvN3hza0NJQjcxMEdUZDl4cmhsbFRLZk9GelExM2tCT09yCiAgaFhnUmw4SWRnc3pJeUhxZgogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KaW1hZ2VQdWxsU2VjcmV0czogbnVsbApwcm9tZXRoZXVzOgogIGVuYWJsZWQ6IGZhbHNlCnByb21ldGhldXNVcmw6IGh0dHA6Ly9wcm9tZXRoZXVzLWt1YmUtcHJvbWV0aGV1cy1wcm9tZXRoZXVzLm1ldHJpY3Muc3ZjLmNsdXN0ZXIubG9jYWw6OTA5MApwcm94eToKICByZXNvdXJjZXM6CiAgICBjcHU6CiAgICAgIHJlcXVlc3Q6IDEwMG0KICAgIG1lbW9yeToKICAgICAgbGltaXQ6IDI1ME1pCiAgICAgIHJlcXVlc3Q6IDIwTWkKcHJveHlJbml0OgogIGt1YmVBUElTZXJ2ZXJQb3J0czogNDQzLDQ0Mwpwcm94eUluamVjdG9yUmVzb3VyY2VzOgogIGNwdToKICAgIGxpbWl0OiAiIgogICAgcmVxdWVzdDogMTAwbQogIGVwaGVtZXJhbC1zdG9yYWdlOgogICAgbGltaXQ6ICIiCiAgICByZXF1ZXN0OiAiIgogIG1lbW9yeToKICAgIGxpbWl0OiAyNTBNaQogICAgcmVxdWVzdDogNTBNaQp3ZWJob29rRmFpbHVyZVBvbGljeTogRmFpbAo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
