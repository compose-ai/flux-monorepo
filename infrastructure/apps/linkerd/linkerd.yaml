---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU9GNXVIZG5XU2RJUHpRM2FjTlJSTFF3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak14TVRJeU1qSTBPRFU0V2hjTk1qUXhNVEl4TWpJME9EVTRXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5xUk9KYllubm1KUVNWenRlaGtlTUdzODdQaEpYODFCa0JXcy91cVlkd2NZTnVoKzB6VwpKVWVmb1dVYjJ5Z0lKVDBmUDJXTVBiVlhyQXdaNWNCSGFGV0o0bjRaOGF3MlQyQ2NBdUJSeWZNVmhYTWxGbVgzCnhCVjVvNVFNOHMva1ZWKzhIUVBQVG5uRWhQK0IvRDJYcFAzTHRHR3pBV2cxbm5xMVBjdUdJbERqWmkvT202NzkKTG9oRzN4cEpWVXhsQThwZnczM1lTRXBMbDV5dnlwWFk2Q3JCRWkxOWgrTUlQWExxQUl6Y2orbXdOSjhzRkkvMgplK0FaaFA2UnVPNEIwSks1NXAxM3Y0RmNLdU4yVzRaWHZRTVZDSXBIc040d3hVYkdma3R4aTFRTnpuOU5yT2hWCnNRMHprYmlxcjJMQmRua2h2OFJ1cnc0SjNmaTdNVTdEcExFQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCNGg3ZXNFam5ma1NkcVNxLzZlWVF2MHEweUs3K1NBWkN1T1g5cHJ2STgKYnN2eFVEK29vZVFYaXVYVDFFWDN1ckxCbm43OFdONXJVaEJ3aGw0cXhSaFgyOXR5aENESlphUTYrSFI1eFBvSApuWUJaNjZVRHlHVWFxVjNBWmdhakFKc2d2SlQwWnJVYUFwbFJkcDR4aFU5a1BCWlpRQVpxdGFsbExMcWM3MjBECk1ZeEhXZEkwbU1RdEJ5UllIL2JuZllzbktvTHRKY3VKeDF6WnpZM0JtVkVRT2duL3hGdE9yUTUzbHlaS3E1SVYKbFFkMzl2S0ZVdGQxcXQ1SmF5clVrYTkyaXlKTlp1VUpJdy9NWlpRRHN2aThoM3Ezd2dRUW5JQ05WbmNsK05hMApEcXMzYUl6V0QrT0w0a2VzOXA2YUlQQkk1cFBHbU82WlFEa1Yxd0pIbWczbAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMnBFNGx0aWVlWWxCSlhPMTZHUjR3YXp6cytFbGZ6VUdRRmF6KzZwaDNCeGcyNkg3ClROWWxSNStoWlJ2YktBZ2xQUjgvWll3OXRWZXNEQm5sd0Vkb1ZZbmlmaG54ckRaUFlKd0M0RkhKOHhXRmN5VVcKWmZmRUZYbWpsQXp5eitSVlg3d2RBODlPZWNTRS80SDhQWmVrL2N1MFliTUJhRFdlZXJVOXk0WWlVT05tTDg2YgpydjB1aUViZkdrbFZUR1VEeWwvRGZkaElTa3VYbksvS2xkam9Lc0VTTFgySDR3ZzljdW9Bak55UDZiQTBueXdVCmovWjc0Qm1FL3BHNDdnSFFrcm5tblhlL2dWd3E0M1piaGxlOUF4VUlpa2V3M2pERlJzWitTM0dMVkEzT2YwMnMKNkZXeERUT1J1S3F2WXNGMmVTRy94RzZ2RGduZCtMc3hUc09rc1FJREFRQUJBb0lCQUF2MmROVjB4Nys1TG5LaApVYXlGaTBKMmQrUTVoM2JkN1JpcVpqRjVFdUFjUVlUajZjQTczRkIrUVRRcWdTVkF4T0VDaTlMQUNVU2FwdFVHCnVkZDdVUStWZTJzUmVuUEZpVFN0ZFU3WHl5amQzYTcrc2FvbEZIdGthL3FYZHRiQUZaZ20wS083dmZ6V0w3MVkKWFBqMkN0YkZSbnN1Yy81REtRaG9VUmlKbitrelh4eUxaWlIxTTE0MC9HU05xbE5UblVYdDJ3Q1dJU1QzUERSRgp3THNYNkc0aCtVc0JxNVU4RWJXZCtBZGdKMmxNS3dYeXVuN2lDSFhjMnlSZ1ZHdEFJd1p5WmwyOXczMlVUaTB1CkhhVFV3bm1zaDZtUkpDbndGWWQ3bUxWVnB0VjhaK0xrZ2U4elB5YW9VYVYwN3J5WHNxWEFqOGRuQ05CZXZQOEcKWGVDSG1tMENnWUVBM3F2ZTIzQXI5ZkptRGZDMlJTMm1VUmloL2lnc1dnSG43VUJ4Y2tyV29nNjQ0WmpPWGVEVwp5YmtJOWdsSmhjNCtVaXluWGpkVnRBZ2l5bGRxUWpuMjhWckVNQzhCbWN5NE1lNjlnN2JQSkRqRkpEVTFRVkVKCjBmS2FSK1Jmdm5UWUVQMFNSem9EYy9OYXdqY3pjTTBMUGxCd0l3bnR0bGRFMHZIb1R3YkhuTmNDZ1lFQSswZ1gKMmZMVE8xYjZIRFEwU3piTTdkSDlwcDFSQnE4aUl3SkFJUDQ5NXAxM1doNXR2NGgyZUQ2bDVzNFNCUlJFUWNtdApicVgwUWZhTzlWOTNWd3VreTNxb3lsVlVsbDllakV4RlR6YnJFRitkaEdmYkpPVFl4Szg2K09NNXdUcWR4UHNzCmtKZ3ZHYU15eVBTdlpkOGVpeUQ0bGhnQ29oMWIwYndBMmpsUjBiY0NnWUVBeHVDdkRVTWtvR2k5cWRuQ2tncngKcnlEWEhvOTIvWFVTVnA3bU5IU1BPdkwzUWRjZkNrNFV5TnJSSEI2ellpVVJHSWYxZkhyanV3WkJQSVBTemcvRApkVkhpUkQ3WHFTeGxuNE5pRk5Ba05tL1Y5RDdwcjhyWGdJSzBOVjNOL2VlU1M2b2N0eTBqaEY1b1EycldNUHVSCi9UZ096OXpBU2Ntc0dOUWk3dUpaU3NVQ2dZQXY1NGlVaGxSNnhaUWMrRjdYei9TMWlnai9VSkozNGI5eVNTV00KcEt1TVlZeTFZNE9zdGdsUDF6R3RsSytleEVSVy9tblA1RmR5azl5aExyZ0RvamFpakJuTnFRTGRRQVU0WGZvQQpwZ21lTDN4S0Y3cVJpQWREUjl6SVFobHFteEFrMDNXbGd6M0hkM05oR0RTd0NSODdpdWVaUmE2SzFXb0J6QU9sCmxyUGdkUUtCZ0VZc21xSVdDcW9TL2NDbWswcUVYY0hWOUZVaEs1dEdUUnlqS2FqQUlxaFZxcGpNRmlRd2p2Q2YKMmsxYTJ4dkxBdUhkaUI0dnpld2R2UUh2NEowdW83c3I5Uy9xN2pNaWxuZDV4bmJ6SnJUMkR3aFAxNGVUTEZGRApzUmdaRGpUWjZuQVEwN0FBemFzT0hScVBjVGZJdXVTZSs4NXU4RkJ2aG5Fd3NXSW1uMDZLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU9GNXVIZG5XU2RJUHpRM2FjTlJSTFF3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak14TVRJeU1qSTBPRFU0V2hjTk1qUXhNVEl4TWpJME9EVTRXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5xUk9KYllubm1KUVNWenRlaGtlTUdzODdQaEpYODFCa0JXcy91cVlkd2NZTnVoKzB6VwpKVWVmb1dVYjJ5Z0lKVDBmUDJXTVBiVlhyQXdaNWNCSGFGV0o0bjRaOGF3MlQyQ2NBdUJSeWZNVmhYTWxGbVgzCnhCVjVvNVFNOHMva1ZWKzhIUVBQVG5uRWhQK0IvRDJYcFAzTHRHR3pBV2cxbm5xMVBjdUdJbERqWmkvT202NzkKTG9oRzN4cEpWVXhsQThwZnczM1lTRXBMbDV5dnlwWFk2Q3JCRWkxOWgrTUlQWExxQUl6Y2orbXdOSjhzRkkvMgplK0FaaFA2UnVPNEIwSks1NXAxM3Y0RmNLdU4yVzRaWHZRTVZDSXBIc040d3hVYkdma3R4aTFRTnpuOU5yT2hWCnNRMHprYmlxcjJMQmRua2h2OFJ1cnc0SjNmaTdNVTdEcExFQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCNGg3ZXNFam5ma1NkcVNxLzZlWVF2MHEweUs3K1NBWkN1T1g5cHJ2STgKYnN2eFVEK29vZVFYaXVYVDFFWDN1ckxCbm43OFdONXJVaEJ3aGw0cXhSaFgyOXR5aENESlphUTYrSFI1eFBvSApuWUJaNjZVRHlHVWFxVjNBWmdhakFKc2d2SlQwWnJVYUFwbFJkcDR4aFU5a1BCWlpRQVpxdGFsbExMcWM3MjBECk1ZeEhXZEkwbU1RdEJ5UllIL2JuZllzbktvTHRKY3VKeDF6WnpZM0JtVkVRT2duL3hGdE9yUTUzbHlaS3E1SVYKbFFkMzl2S0ZVdGQxcXQ1SmF5clVrYTkyaXlKTlp1VUpJdy9NWlpRRHN2aThoM3Ezd2dRUW5JQ05WbmNsK05hMApEcXMzYUl6V0QrT0w0a2VzOXA2YUlQQkk1cFBHbU82WlFEa1Yxd0pIbWczbAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRTHRGUHRRK3VPdXk3dEM5aC9icUlvekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNeE1USXlNakkwT0RVNFdoY05NalF4TVRJeE1qSTBPRFU0V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUR3UG1DSi9ZZGZ3ditoZW1yZFJZNUQyLzBVYU1wMEswR1lMVkJxNlh5TAo1djBtM3RrVHQwYm9sRW1PWXVEMkdaRVlyOXRZNllHTUZxU3dpYWFFbk1BNTlDbFV6ZzgydlR2ODdXMys4T1FnCldNMWJCcXdDQ1JCL3B4ODhGWjloSnNwcU1RZjRSTzQ4ZjkwNHJJd0JQS21rRHZnYitZdmdFbFJsSFVRRk1yUGcKa0JYSEx4N2dyeVM2NmhYMkhoaXY2Mk9qYzU2b0JRdzMyV2NhZ3RQKzdiMkxBMmdIdkFBZGhWZ1VZOERveDVGRQppaS85YUdtMnlDejRRQWhoNkpRL0xEdFBKWklGaEFvYXdnQXhSSTFXMWJxYlk2NVpDVTJydVNiYTFZaUxTYzgwClRBeS9mUlZpTU5qbElYMzVMdFZCMXU4RVlRRGVwaC9aVll5bnp3Y1RJc2FGQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFZ2FiTVBxb3ZUVTVzRXcvMW5hODNrdjFVQ0YKQ2FsaFc1ZTBYYjhUZEg1S1JXQjVmYldpRm1IazRtakVDOGxmUUUya1pJVGZ5NVpCcUJDcHllU3ZKVmpoM2toTwpoai8yY3o1bVdrZ1RIQ010VEJibXlPOENDWXlKVXA3U21WMHNBcUpSdmpaN2ZEMDU0MnNBNkM0K0hId0xCWjlaCldXNVQwT0NkYmt0RDNEV1hQNWt3RUt6MW5vVW9xYUs5M21PcnJCTTIzYzBVa3FlRXU5U2RlQ1pqbEFTRzYxTC8KbjY3alVESG1NU0RRdm9vL3RrekZ5TldWa3ZnbTRuUEhsdHZ5NDVCa1lxQzlqOXVKRFAxK3pNdTg1SnN3R0xSSgpGVUNOR2ZPbVdvSXByVm9Gak5ud3BNMTFpSkxLb3lLNGdmd1RzQVhQQ0g1S2h0YURMYVoxVmliUWlwVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBOEQ1Z2lmMkhYOEwvb1hwcTNVV09ROXY5RkdqS2RDdEJtQzFRYXVsOGkrYjlKdDdaCkU3ZEc2SlJKam1MZzlobVJHSy9iV09tQmpCYWtzSW1taEp6QU9mUXBWTTRQTnIwNy9PMXQvdkRrSUZqTld3YXMKQWdrUWY2Y2ZQQldmWVNiS2FqRUgrRVR1UEgvZE9LeU1BVHlwcEE3NEcvbUw0QkpVWlIxRUJUS3o0SkFWeHk4ZQo0SzhrdXVvVjloNFlyK3RqbzNPZXFBVU1OOWxuR29MVC91Mjlpd05vQjd3QUhZVllGR1BBNk1lUlJJb3YvV2hwCnRzZ3MrRUFJWWVpVVB5dzdUeVdTQllRS0dzSUFNVVNOVnRXNm0yT3VXUWxOcTdrbTJ0V0lpMG5QTkV3TXYzMFYKWWpEWTVTRjkrUzdWUWRidkJHRUEzcVlmMlZXTXA4OEhFeUxHaFFJREFRQUJBb0lCQUZRL0s0OTRUcTZ3TFFDdApjeWdoS2lCMTFxdi9pMjl0YzlVdm50Ry9DeVBzWHIzd3krTDBGSE9lL0tSbjNFZXc4NGJhdEdyYmg4aGVjR1pQCi93cm1CU3JOaW1qbzBjRDZYenowN2V2SEFkaXVDMlZ1VTRkck1sUHhnU3lLMEpjN0NTUndDVUZ3dXJLUWpEMUIKbE44aUxNTVJWTVJLb0ZoMVZROFlVakFZZGFlN2NWZHlMd2Z5YlZHQWtHUlB3UzI2OHgxQkhvVmZUdFpxTTZKYwpOclBDWXZtYkFwTk9IVU9QMDBLd0p5eitDTTdHS2toWU1jWFhDUUREQTFuVUFwazlKQ3diR0hxdjJtMkpnWDd2CjYrOGc0TkdUYWlSZSs5TXZEbWxTbldRdDhrdmVNcXZhTldscFdvb1NJK1QwOS9RYlQxS2FUeXI5WTJXYzI0dHQKVkJ6RnZVa0NnWUVBK2N3aGh3MHFyU1V5Q21LcmZrMytKV2dBODliNUdIV2lUUllINVhzWFFhUktMSlE2RkIzaQpYKzc3UHpISHZ1L1ZHYnFUcmpPZjV1RWJtZGRvQ3lKMzZ1WUxWeTV6bklpVDEwaUk4eXZJZGZGckU0aHNaSURYCmREcGxlWnhTenV1eWtuSEVNYjBUOHFKM1RWaEJjRXM2SUFTaTFpNmMrTEw5SmNDS2lEajhycnNDZ1lFQTlqV0UKUTZoSUF4SHhyaXp4ak82aWxEOFpWWERPYXN0eS9EUHZSNG9WL2NMM2tKNGVROEdsYnR5SzNJSXArWEZOUjlNWgpsK2xGcGtTaWFoTjBOZ0FJK215NFBrdXYrUW85SkQ5OXRCRHV2MTRueXhnb2h0bjZzdEt2cDZvbmtBREV6WlJQCjkzUmh0N281a3RHMUN0dWVreTdHeE10akp5a3hzUkNQMHRjWks3OENnWUFzYW55SHEvS3JxTkoyQUVkb0JPd3MKc0lxQzBQV253THJrSkFleGFTcWdkRnJ3QkVjemJvRGk5L1phclRwTUhBN3pMVGEzSWR6THk3a0JxTWlLT2szQwpTYmM0Z0R6MFYyQ2FSZjU3NW93VlZLRHFieloreEY0Sy81c3RmWHRINmFidDNTYTZoVmszcW1XMkxmd3N3R09NCmIrYVlXTjkyWlRVWDhsMXZqVnA0b3dLQmdRRFMycFpCVXhjSStnOGVlWU1NalRwUzk0NzhxelU4Skt4KzdRTloKSXhzZVRpQ3lpNWVqczIyNGVjdTZlUWIxaDJFRngvWTlNUnZpL3hpUSs4UWtrdmNkY0lxQlgxUi9WWk56UGFTcgoxMnlBRzJTOC9CMkpENWt5R0ZreW4vaHR6UnErYk92bklwYWxRQ2thWWRwSVNEbVFGeGxIWkYrd0pBbFllTFNUCmZuOGlCUUtCZ0VFdElaK1FZalVyK2JJdCtlUmY2aVIvZTIwU21VaVQ3T2xuWjR5ME1CM3NJbllBRU10RVYyZk4KVnJnaHVncVFpdnJwS2NFQjdJd1JUZ1gzak1XcHQrWUZIUWFYS0E5NndCRHlKYWgwYXFocU8zeVBWclZFZWw2RAptMEpqRE9wZ2thVi9VZlJjY09HZWRPZnEyYXpCelhsaDhYWlAyVXp3dEFKRHo4eldQWFJGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRTHRGUHRRK3VPdXk3dEM5aC9icUlvekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNeE1USXlNakkwT0RVNFdoY05NalF4TVRJeE1qSTBPRFU0V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUR3UG1DSi9ZZGZ3ditoZW1yZFJZNUQyLzBVYU1wMEswR1lMVkJxNlh5TAo1djBtM3RrVHQwYm9sRW1PWXVEMkdaRVlyOXRZNllHTUZxU3dpYWFFbk1BNTlDbFV6ZzgydlR2ODdXMys4T1FnCldNMWJCcXdDQ1JCL3B4ODhGWjloSnNwcU1RZjRSTzQ4ZjkwNHJJd0JQS21rRHZnYitZdmdFbFJsSFVRRk1yUGcKa0JYSEx4N2dyeVM2NmhYMkhoaXY2Mk9qYzU2b0JRdzMyV2NhZ3RQKzdiMkxBMmdIdkFBZGhWZ1VZOERveDVGRQppaS85YUdtMnlDejRRQWhoNkpRL0xEdFBKWklGaEFvYXdnQXhSSTFXMWJxYlk2NVpDVTJydVNiYTFZaUxTYzgwClRBeS9mUlZpTU5qbElYMzVMdFZCMXU4RVlRRGVwaC9aVll5bnp3Y1RJc2FGQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFZ2FiTVBxb3ZUVTVzRXcvMW5hODNrdjFVQ0YKQ2FsaFc1ZTBYYjhUZEg1S1JXQjVmYldpRm1IazRtakVDOGxmUUUya1pJVGZ5NVpCcUJDcHllU3ZKVmpoM2toTwpoai8yY3o1bVdrZ1RIQ010VEJibXlPOENDWXlKVXA3U21WMHNBcUpSdmpaN2ZEMDU0MnNBNkM0K0hId0xCWjlaCldXNVQwT0NkYmt0RDNEV1hQNWt3RUt6MW5vVW9xYUs5M21PcnJCTTIzYzBVa3FlRXU5U2RlQ1pqbEFTRzYxTC8KbjY3alVESG1NU0RRdm9vL3RrekZ5TldWa3ZnbTRuUEhsdHZ5NDVCa1lxQzlqOXVKRFAxK3pNdTg1SnN3R0xSSgpGVUNOR2ZPbVdvSXByVm9Gak5ud3BNMTFpSkxLb3lLNGdmd1RzQVhQQ0g1S2h0YURMYVoxVmliUWlwVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["*"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUtCZTdyeDF6eGxyYkszMHR3MnlTa2d3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TXpFeE1qSXlNalE0TlRkYUZ3MHlOREV4TWpFeU1qUTROVGRhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRFZ0aUx3aitWNEVxZjBWMU9jOWp3VnZuUVVLRER6blMxcGpDN09wdlNPN0tQZwp2ZWJvU2krMlQ1aVB4NlBXUUNscDVkV243MDEvelAwd0IzeEUwOFl6YUloemVBU25GdG1nOTdEZTR3cEJlMDVEClZISTZDV1dJOSt5bDZHLzhuMDliZTBzYkJzMWsvYTczUjdYM2lsNEUzV3Z6b3VnN1FxdWV0WkVVZWlvMmJra2wKeCtQWDNJK1JPTWxpdFFmUEI3UTlrTStXK29kUFJqeEhJdDVrSUNmVW80cTJRN3A0VHNkMmdWWTFrUmc0ZGxBdAp0KzNlWjRaU1E0MUw1bVNvZnUyaWpvQ01LeTBrS2IvV0FyVXFMaXBvbG81ZFMyNFRCem9lQTlOMTEwNDMrZXFUCmVKSk9FYnFSbXJYbTBFR3prVUx4RzlYSXk4c2p6eXNMd3VDQ0ErVDNBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURMbk1oQnIvZGhZMFFiNUJvS3JtRDc0RnB1dFlGNjhKMHEKTUIrbXU3cU9nZHBVeVBmTWpSbzhDN0IzVnhTaFVzVkpiNVh0SWxvMzlVNm1KN2s3Tmk3QUhjNkFwUkpaNGZWcgppQTBRaFBuUU93RmRxQWNkYmQzd0s3US9NYy9YVzU0NHFLenlSU1NhQ1dIeXRsbHl4SE9jMTFNUEl5RVc0NFkxCkR5VnQ4YmhFNDQxUTM2Nk1VLzdJc21SMnhRS0VLWkVJUXR2SWJCZkxyN3NsZ2FFRzYrbEdqTjduaXF5QnlRYTQKbjQvaDJtUW00VEZMU3BEeVROOHNUK2lXMElIV0tWbGRjcVY0TjVVaGdXVExVSUpERUNaSXJWL0pDZ0NOV01lMQp5TFVCU1oxblBMclhYd1pvTzU2V0huK09iNUxKZ0xoM0xVRGpqTmdkQ3ZjaXpsOXNuc1prCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMWJZaThJL2xlQktuOUZkVG5QWThGYjUwRkNndzg1MHRhWXd1enFiMGp1eWo0TDNtCjZFb3Z0aytZajhlajFrQXBhZVhWcCs5TmY4ejlNQWQ4Uk5QR00yaUljM2dFcHhiWm9QZXczdU1LUVh0T1ExUnkKT2dsbGlQZnNwZWh2L0o5UFczdExHd2JOWlAydTkwZTE5NHBlQk4xcjg2TG9PMEtybnJXUkZIb3FObTVKSmNmagoxOXlQa1RqSllyVUh6d2UwUFpEUGx2cUhUMFk4UnlMZVpDQW4xS09LdGtPNmVFN0hkb0ZXTlpFWU9IWlFMYmZ0CjNtZUdVa09OUytaa3FIN3RvbzZBakNzdEpDbS8xZ0sxS2k0cWFKYU9YVXR1RXdjNkhnUFRkZGRPTi9ucWszaVMKVGhHNmtacTE1dEJCczVGQzhSdlZ5TXZMSTg4ckM4TGdnZ1BrOXdJREFRQUJBb0lCQVFEUmpPOURuSVV2c0hOWgpaZ3RKZkRROFNldytHNDZzUVRGWExpcHpYVWV0b1NHcmErbXZXWmJoRjdrTE9vRk93c2tZMmxFZWdzb21CMVUzCnRBOUkyYktkaytFLy82M29QTUtXVUdqd2xBVHBZa1BDUjFwZHgvcjBTODJTZkpEYVQwZWI5eEFVNXgyYzZoYVcKeDQwSXRYY3RKQVFHK0hUb0xwNWpWN3R6TGJxWWRNNU1sMEtCRDNuN2VQZEsvMEw0eVEyWGR2d1dzRHBYZ1dTdQptb005TjY2WEdjaFBqeUIrSlpSZ3pPNGl1R1Z3ZTZPSEVGWkFCWVN6djRsekpVVFhmSXpDd3N0Tnc1SFpVeGw4ClBuOG9NWko4SENjOERjbWNIOEk3QlhFckFoTWlrRmpQVm8vc1h0cE9lTlh0Tkp5TVd0M3RxdTVUU0FDNm5ZQjUKMllETU1NUGhBb0dCQVBRUGo3YWUrdGlwaTJybzFZQkd5NEJ3Z3lvaE94aThIajZCVmllQ3daOURTZTQxNy95TgpkZlhPYW1hUUU2c3Zwekc4TnlKTWNoN1FqV2hMUHF1MGljSUxjWTIxTXlyNElrd3lVM1BRY3dMMEZiMUlWWG1aCnRWRUEvaUJhWjBMYUtHZUJ0SzFJV0trUHhMZWR6dEVBbTJMa3diMjRCM1JLZVlXaVpuZWdMQitIQW9HQkFPQXEKZ0tNRE5tL1JyK1pRY3FoVWliTm5EUXp3Y3pzR3I2WTV4eVZObUtJZjJmWldhWXg1VWxaWmxhSzd4dVRIVDlWKwplbzR0MkFScjlJeWIrNXZCeXU3NzlLTUF5V2gzblBKaW1CZVdDTU5PQm9yQWVpcEhZZFFKUktSbXZ0N1FTU0Z6CjUwd1ZFOE9KTFdwSjN6ZC9HU21Dc2FJTzBsSjY5V0RjbVY3WkxRc1JBb0dBRTdKQnplSXNxbG1jZDhkTW02cWEKOThXY3dFU29TVW05UXh3YkFOdExsdmZPT3B3OXZ1c0hyd3UyaUlwdUcrMmZsNkx4N0NHeFFBMWlyQjBPZExzQQpOeG5IVTBGaFhNRmp1elNBaWFNejlQUVA0Uk82V2pMdWNCZ2RhaTBCa21LYXlpZXNsaU4xakVkS2Yrc0xhdENhCnViTnVjMG9yeDlYTzB0c1ZXK2dnUjNjQ2dZRUF1T3QyNklLcThuMW8vTGFhanpBRjFDQUxqUVFDR3N3K05BTHYKdkY4UnJaUlc2cmFJSmFDamdxWXVJV3VEL0pCSzFGU2M1eEw4WTFGbkVHTlFvVUd4bFluMVdrNDQxOXZzZGF0Tgp5Zzh6dFdGMVZockg3SDZzUGcxVE9jZWtad3d0ZDlJMEdQZytNSXpHRVN0VlgyT1NyMEtvSkliVGk4VHhEUEdOCjk4ZHlOL0VDZ1lFQXBQT3hNc0h5c2lpLzhGQU1LTEMvWlVuNmpRc21Jei9UTXpZdTFLOHcydlBIZ0NHWVlQSEsKM3ZNY2lOSDNadGFiS1lTYjZqaUg3RkZRbXkxVno4Ty9qbGZ1NFEwQTlzUVBnd0YwUC9CYVdjVkowajRqRkxraAo4akpGT1VEeTFaOHRqeE1vQW5DNit6Z3F1KzJCQWJNRFp5bStEMzlvdWRIc08xbWhybzd4Vnc4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUtCZTdyeDF6eGxyYkszMHR3MnlTa2d3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TXpFeE1qSXlNalE0TlRkYUZ3MHlOREV4TWpFeU1qUTROVGRhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRFZ0aUx3aitWNEVxZjBWMU9jOWp3VnZuUVVLRER6blMxcGpDN09wdlNPN0tQZwp2ZWJvU2krMlQ1aVB4NlBXUUNscDVkV243MDEvelAwd0IzeEUwOFl6YUloemVBU25GdG1nOTdEZTR3cEJlMDVEClZISTZDV1dJOSt5bDZHLzhuMDliZTBzYkJzMWsvYTczUjdYM2lsNEUzV3Z6b3VnN1FxdWV0WkVVZWlvMmJra2wKeCtQWDNJK1JPTWxpdFFmUEI3UTlrTStXK29kUFJqeEhJdDVrSUNmVW80cTJRN3A0VHNkMmdWWTFrUmc0ZGxBdAp0KzNlWjRaU1E0MUw1bVNvZnUyaWpvQ01LeTBrS2IvV0FyVXFMaXBvbG81ZFMyNFRCem9lQTlOMTEwNDMrZXFUCmVKSk9FYnFSbXJYbTBFR3prVUx4RzlYSXk4c2p6eXNMd3VDQ0ErVDNBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURMbk1oQnIvZGhZMFFiNUJvS3JtRDc0RnB1dFlGNjhKMHEKTUIrbXU3cU9nZHBVeVBmTWpSbzhDN0IzVnhTaFVzVkpiNVh0SWxvMzlVNm1KN2s3Tmk3QUhjNkFwUkpaNGZWcgppQTBRaFBuUU93RmRxQWNkYmQzd0s3US9NYy9YVzU0NHFLenlSU1NhQ1dIeXRsbHl4SE9jMTFNUEl5RVc0NFkxCkR5VnQ4YmhFNDQxUTM2Nk1VLzdJc21SMnhRS0VLWkVJUXR2SWJCZkxyN3NsZ2FFRzYrbEdqTjduaXF5QnlRYTQKbjQvaDJtUW00VEZMU3BEeVROOHNUK2lXMElIV0tWbGRjcVY0TjVVaGdXVExVSUpERUNaSXJWL0pDZ0NOV01lMQp5TFVCU1oxblBMclhYd1pvTzU2V0huK09iNUxKZ0xoM0xVRGpqTmdkQ3ZjaXpsOXNuc1prCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.14.1
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.14.1
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMzA3MjcyMDM2MTJaFw0yNDA3MjYyMDM2MzJaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEqp/0h2aPyNUCdSWJRDESVv9+SamuHIhFr1r/aktem964i1rtfDSMy5H7Xtv6
            F1ZOG5r/j+dt5YBi4azxoXLxfKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBTQ6nT+djTeU+P+BO1XEeVnGpAqyzAKBggqhkjOPQQDAgNIADBFAiEAgZo3Yt65
            LqTDrGGFRjvbbUYDeWTijGIqnE9lbK/7xskCIB710GTd9xrhllTKfOFzQ13kBOOr
            hXgRl8IdgszIyHqf
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMzA3MjcyMDM2MTJaFw0yNDA3MjYyMDM2MzJaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEqp/0h2aPyNUCdSWJRDESVv9+SamuHIhFr1r/aktem964i1rtfDSMy5H7Xtv6
      F1ZOG5r/j+dt5YBi4azxoXLxfKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTQ6nT+djTeU+P+BO1XEeVnGpAqyzAKBggqhkjOPQQDAgNIADBFAiEAgZo3Yt65
      LqTDrGGFRjvbbUYDeWTijGIqnE9lbK/7xskCIB710GTd9xrhllTKfOFzQ13kBOOr
      hXgRl8IdgszIyHqf
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.14.1
    networkValidator:
      connectAddr: 1.1.1.1:20001
      enableSecurityContext: true
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: "http://prometheus-kube-prometheus-prometheus.metrics.svc.cluster.local:9090"
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.3
      iptablesMode: legacy
      kubeAPIServerPorts: 443,443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEzTWpjeU1ETTJNVEphRncweU5EQTNNall5TURNMk16SmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVxcC8waDJhUHlOVUNkU1dKUkRFU1Z2OStTYW11SEloRnIxci9ha3RlbTk2NGkxcnRmRFNNeTVIN1h0djYKRjFaT0c1ci9qK2R0NVlCaTRhenhvWEx4ZktOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVFE2blQrZGpUZVUrUCtCTzFYRWVWbkdwQXF5ekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBZ1pvM1l0NjUKTHFURHJHR0ZSanZiYlVZRGVXVGlqR0lxbkU5bGJLLzd4c2tDSUI3MTBHVGQ5eHJobGxUS2ZPRnpRMTNrQk9PcgpoWGdSbDhJZGdzekl5SHFmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFRMFViZks2R3NxQXh1ZzZUSVgwelEwckxnVWhDSEcxRjhjQVVvdXI0aG1vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFcXAvMGgyYVB5TlVDZFNXSlJERVNWdjkrU2FtdUhJaEZyMXIvYWt0ZW05NjRpMXJ0ZkRTTQp5NUg3WHR2NkYxWk9HNXIvaitkdDVZQmk0YXp4b1hMeGZBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMzA3MjcyMDM2MTJaFw0yNDA3MjYyMDM2MzJaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEqp/0h2aPyNUCdSWJRDESVv9+SamuHIhFr1r/aktem964i1rtfDSMy5H7Xtv6
    F1ZOG5r/j+dt5YBi4azxoXLxfKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBTQ6nT+djTeU+P+BO1XEeVnGpAqyzAKBggqhkjOPQQDAgNIADBFAiEAgZo3Yt65
    LqTDrGGFRjvbbUYDeWTijGIqnE9lbK/7xskCIB710GTd9xrhllTKfOFzQ13kBOOr
    hXgRl8IdgszIyHqf
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.1
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.1
        linkerd.io/proxy-version: stable-2.14.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b7b269805d7c75f9c59e7e0c30939b16ac2d21e4d2ecf4305b2db36222760476
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.1
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.1
        linkerd.io/proxy-version: stable-2.14.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b7b269805d7c75f9c59e7e0c30939b16ac2d21e4d2ecf4305b2db36222760476
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.1
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
spec:
  concurrencyPolicy: Replace
  schedule: "58 22 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.14.1
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.14.1
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus-kube-prometheus-prometheus.metrics.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.1
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.1
        linkerd.io/proxy-version: stable-2.14.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b7b269805d7c75f9c59e7e0c30939b16ac2d21e4d2ecf4305b2db36222760476
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.1
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEzTWpjeU1ETTJNVEphRncweU5EQTNNall5TURNMk16SmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFcXAvMGgyYVB5TlVDZFNXSlJERVNWdjkrU2FtdUhJaEZyMXIvYWt0ZW05NjRpMXJ0ZkRTTXk1SDdYdHY2CiAgICAgICAgRjFaT0c1ci9qK2R0NVlCaTRhenhvWEx4ZktOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlRRNm5UK2RqVGVVK1ArQk8xWEVlVm5HcEFxeXpBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQWdabzNZdDY1CiAgICAgICAgTHFURHJHR0ZSanZiYlVZRGVXVGlqR0lxbkU5bGJLLzd4c2tDSUI3MTBHVGQ5eHJobGxUS2ZPRnpRMTNrQk9PcgogICAgICAgIGhYZ1JsOElkZ3N6SXlIcWYKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUFRMFViZks2R3NxQXh1ZzZUSVgwelEwckxnVWhDSEcxRjhjQVVvdXI0aG1vQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVxcC8waDJhUHlOVUNkU1dKUkRFU1Z2OStTYW11SEloRnIxci9ha3RlbTk2NGkxcnRmRFNNCiAgICAgICAgeTVIN1h0djZGMVpPRzVyL2orZHQ1WUJpNGF6eG9YTHhmQT09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU16QTNNamN5TURNMk1USmFGdzB5TkRBM01qWXlNRE0yTXpKYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVxcC8waDJhUHlOVUNkU1dKUkRFU1Z2OStTYW11SEloRnIxci9ha3RlbTk2NGkxcnRmRFNNeTVIN1h0djYKICBGMVpPRzVyL2orZHQ1WUJpNGF6eG9YTHhmS05oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCVFE2blQrZGpUZVUrUCtCTzFYRWVWbkdwQXF5ekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBZ1pvM1l0NjUKICBMcVREckdHRlJqdmJiVVlEZVdUaWpHSXFuRTlsYksvN3hza0NJQjcxMEdUZDl4cmhsbFRLZk9GelExM2tCT09yCiAgaFhnUmw4SWRnc3pJeUhxZgogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KcHJveHlJbml0OgogIGt1YmVBUElTZXJ2ZXJQb3J0czogNDQzLDQ0Mwo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
